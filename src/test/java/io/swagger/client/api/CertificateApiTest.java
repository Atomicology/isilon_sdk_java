/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CertificateServer;
import io.swagger.client.model.CertificateServerExtended;
import io.swagger.client.model.CertificateServerIdParams;
import io.swagger.client.model.CertificateServerItem;
import io.swagger.client.model.CreateResponse;
import io.swagger.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CertificateApi
 */
@Ignore
public class CertificateApiTest {

    private final CertificateApi api = new CertificateApi();

    
    /**
     * 
     *
     * Import a TLS server certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCertificateServerItemTest() throws ApiException {
        CertificateServerItem certificateServerItem = null;
        CreateResponse response = api.createCertificateServerItem(certificateServerItem);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a TLS server certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCertificateServerByIdTest() throws ApiException {
        String certificateServerId = null;
        api.deleteCertificateServerById(certificateServerId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve a single TLS server certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCertificateServerByIdTest() throws ApiException {
        String certificateServerId = null;
        CertificateServer response = api.getCertificateServerById(certificateServerId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve a list of all configured TLS server certificates.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCertificateServerTest() throws ApiException {
        String sort = null;
        Integer limit = null;
        String dir = null;
        String resume = null;
        CertificateServerExtended response = api.listCertificateServer(sort, limit, dir, resume);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Modify a TLS server certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCertificateServerByIdTest() throws ApiException {
        CertificateServerIdParams certificateServerIdParams = null;
        String certificateServerId = null;
        api.updateCertificateServerById(certificateServerIdParams, certificateServerId);

        // TODO: test validations
    }
    
}
