/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CreateSnapshotLockResponse;
import io.swagger.client.model.Error;
import io.swagger.client.model.SnapshotLock;
import io.swagger.client.model.SnapshotLockCreateParams;
import io.swagger.client.model.SnapshotLocks;
import io.swagger.client.model.SnapshotLocksExtended;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SnapshotSnapshotsApi
 */
@Ignore
public class SnapshotSnapshotsApiTest {

    private final SnapshotSnapshotsApi api = new SnapshotSnapshotsApi();

    
    /**
     * 
     *
     * Create a new lock on this snapshot.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSnapshotLockTest() throws ApiException {
        SnapshotLockCreateParams snapshotLock = null;
        String sid = null;
        CreateSnapshotLockResponse response = api.createSnapshotLock(snapshotLock, sid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete the snapshot lock.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSnapshotLockTest() throws ApiException {
        String snapshotLockId = null;
        String sid = null;
        api.deleteSnapshotLock(snapshotLockId, sid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete all locks. Will try to drain count of recursively held locks so that the snapshot can be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSnapshotLocksTest() throws ApiException {
        String sid = null;
        api.deleteSnapshotLocks(sid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve lock information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSnapshotLockTest() throws ApiException {
        String snapshotLockId = null;
        String sid = null;
        SnapshotLocks response = api.getSnapshotLock(snapshotLockId, sid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List all locks.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSnapshotLocksTest() throws ApiException {
        String sid = null;
        String sort = null;
        Integer limit = null;
        String dir = null;
        String resume = null;
        SnapshotLocksExtended response = api.listSnapshotLocks(sid, sort, limit, dir, resume);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Modify lock. All input fields are optional, but one or more must be supplied.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSnapshotLockTest() throws ApiException {
        SnapshotLock snapshotLock = null;
        String snapshotLockId = null;
        String sid = null;
        api.updateSnapshotLock(snapshotLock, snapshotLockId, sid);

        // TODO: test validations
    }
    
}
