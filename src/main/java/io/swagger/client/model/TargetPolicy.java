/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TargetPolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class TargetPolicy {
  /**
   * The condition of this policy with respect to sync failover/failback.
   */
  @JsonAdapter(FailoverFailbackStateEnum.Adapter.class)
  public enum FailoverFailbackStateEnum {
    WRITES_DISABLED("writes_disabled"),
    
    ENABLING_WRITES("enabling_writes"),
    
    WRITES_ENABLED("writes_enabled"),
    
    DISABLING_WRITES("disabling_writes"),
    
    CREATING_RESYNC_POLICY("creating_resync_policy"),
    
    RESYNC_POLICY_CREATED("resync_policy_created");

    private String value;

    FailoverFailbackStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FailoverFailbackStateEnum fromValue(String text) {
      for (FailoverFailbackStateEnum b : FailoverFailbackStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FailoverFailbackStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FailoverFailbackStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FailoverFailbackStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FailoverFailbackStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("failover_failback_state")
  private FailoverFailbackStateEnum failoverFailbackState = null;

  @SerializedName("id")
  private String id = null;

  /**
   * The state of the last job run for this policy.
   */
  @JsonAdapter(LastJobStateEnum.Adapter.class)
  public enum LastJobStateEnum {
    SCHEDULED("scheduled"),
    
    RUNNING("running"),
    
    PAUSED("paused"),
    
    FINISHED("finished"),
    
    FAILED("failed"),
    
    CANCELED("canceled"),
    
    NEEDS_ATTENTION("needs_attention"),
    
    SKIPPED("skipped"),
    
    PENDING("pending"),
    
    UNKNOWN("unknown");

    private String value;

    LastJobStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastJobStateEnum fromValue(String text) {
      for (LastJobStateEnum b : LastJobStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LastJobStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastJobStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastJobStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LastJobStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("last_job_state")
  private LastJobStateEnum lastJobState = null;

  @SerializedName("last_source_coordinator_ip")
  private String lastSourceCoordinatorIp = null;

  @SerializedName("last_update_from_source")
  private Integer lastUpdateFromSource = null;

  @SerializedName("legacy_policy")
  private Boolean legacyPolicy = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("source_cluster_guid")
  private String sourceClusterGuid = null;

  @SerializedName("source_host")
  private String sourceHost = null;

  @SerializedName("target_path")
  private String targetPath = null;

  public TargetPolicy failoverFailbackState(FailoverFailbackStateEnum failoverFailbackState) {
    this.failoverFailbackState = failoverFailbackState;
    return this;
  }

   /**
   * The condition of this policy with respect to sync failover/failback.
   * @return failoverFailbackState
  **/
  @ApiModelProperty(required = true, value = "The condition of this policy with respect to sync failover/failback.")
  public FailoverFailbackStateEnum getFailoverFailbackState() {
    return failoverFailbackState;
  }

  public void setFailoverFailbackState(FailoverFailbackStateEnum failoverFailbackState) {
    this.failoverFailbackState = failoverFailbackState;
  }

  public TargetPolicy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The system ID given to this sync policy.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The system ID given to this sync policy.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TargetPolicy lastJobState(LastJobStateEnum lastJobState) {
    this.lastJobState = lastJobState;
    return this;
  }

   /**
   * The state of the last job run for this policy.
   * @return lastJobState
  **/
  @ApiModelProperty(required = true, value = "The state of the last job run for this policy.")
  public LastJobStateEnum getLastJobState() {
    return lastJobState;
  }

  public void setLastJobState(LastJobStateEnum lastJobState) {
    this.lastJobState = lastJobState;
  }

  public TargetPolicy lastSourceCoordinatorIp(String lastSourceCoordinatorIp) {
    this.lastSourceCoordinatorIp = lastSourceCoordinatorIp;
    return this;
  }

   /**
   * The IP address from which a SyncIQ coordinator daemon most recently connected to this cluster to update it about the progress of a job for this policy.
   * @return lastSourceCoordinatorIp
  **/
  @ApiModelProperty(required = true, value = "The IP address from which a SyncIQ coordinator daemon most recently connected to this cluster to update it about the progress of a job for this policy.")
  public String getLastSourceCoordinatorIp() {
    return lastSourceCoordinatorIp;
  }

  public void setLastSourceCoordinatorIp(String lastSourceCoordinatorIp) {
    this.lastSourceCoordinatorIp = lastSourceCoordinatorIp;
  }

  public TargetPolicy lastUpdateFromSource(Integer lastUpdateFromSource) {
    this.lastUpdateFromSource = lastUpdateFromSource;
    return this;
  }

   /**
   * The last time this cluster was updated with sync information from the source cluster for this policy, in unix epoch seconds.  Null if no such update has occurred yet.
   * @return lastUpdateFromSource
  **/
  @ApiModelProperty(value = "The last time this cluster was updated with sync information from the source cluster for this policy, in unix epoch seconds.  Null if no such update has occurred yet.")
  public Integer getLastUpdateFromSource() {
    return lastUpdateFromSource;
  }

  public void setLastUpdateFromSource(Integer lastUpdateFromSource) {
    this.lastUpdateFromSource = lastUpdateFromSource;
  }

  public TargetPolicy legacyPolicy(Boolean legacyPolicy) {
    this.legacyPolicy = legacyPolicy;
    return this;
  }

   /**
   * Was this policy defined by a OneFS version earlier than 6.0? (Pre-6.0 policies did not have the target policy concept and canceling from the target side will not be available.)
   * @return legacyPolicy
  **/
  @ApiModelProperty(required = true, value = "Was this policy defined by a OneFS version earlier than 6.0? (Pre-6.0 policies did not have the target policy concept and canceling from the target side will not be available.)")
  public Boolean isLegacyPolicy() {
    return legacyPolicy;
  }

  public void setLegacyPolicy(Boolean legacyPolicy) {
    this.legacyPolicy = legacyPolicy;
  }

  public TargetPolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * User-assigned name of this sync policy.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "User-assigned name of this sync policy.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TargetPolicy sourceClusterGuid(String sourceClusterGuid) {
    this.sourceClusterGuid = sourceClusterGuid;
    return this;
  }

   /**
   * Unique identifier for the source cluster.
   * @return sourceClusterGuid
  **/
  @ApiModelProperty(required = true, value = "Unique identifier for the source cluster.")
  public String getSourceClusterGuid() {
    return sourceClusterGuid;
  }

  public void setSourceClusterGuid(String sourceClusterGuid) {
    this.sourceClusterGuid = sourceClusterGuid;
  }

  public TargetPolicy sourceHost(String sourceHost) {
    this.sourceHost = sourceHost;
    return this;
  }

   /**
   * Hostname or IP address of sync source cluster.
   * @return sourceHost
  **/
  @ApiModelProperty(required = true, value = "Hostname or IP address of sync source cluster.")
  public String getSourceHost() {
    return sourceHost;
  }

  public void setSourceHost(String sourceHost) {
    this.sourceHost = sourceHost;
  }

  public TargetPolicy targetPath(String targetPath) {
    this.targetPath = targetPath;
    return this;
  }

   /**
   * Absolute filesystem path on the target cluster for the sync destination.
   * @return targetPath
  **/
  @ApiModelProperty(required = true, value = "Absolute filesystem path on the target cluster for the sync destination.")
  public String getTargetPath() {
    return targetPath;
  }

  public void setTargetPath(String targetPath) {
    this.targetPath = targetPath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetPolicy targetPolicy = (TargetPolicy) o;
    return Objects.equals(this.failoverFailbackState, targetPolicy.failoverFailbackState) &&
        Objects.equals(this.id, targetPolicy.id) &&
        Objects.equals(this.lastJobState, targetPolicy.lastJobState) &&
        Objects.equals(this.lastSourceCoordinatorIp, targetPolicy.lastSourceCoordinatorIp) &&
        Objects.equals(this.lastUpdateFromSource, targetPolicy.lastUpdateFromSource) &&
        Objects.equals(this.legacyPolicy, targetPolicy.legacyPolicy) &&
        Objects.equals(this.name, targetPolicy.name) &&
        Objects.equals(this.sourceClusterGuid, targetPolicy.sourceClusterGuid) &&
        Objects.equals(this.sourceHost, targetPolicy.sourceHost) &&
        Objects.equals(this.targetPath, targetPolicy.targetPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failoverFailbackState, id, lastJobState, lastSourceCoordinatorIp, lastUpdateFromSource, legacyPolicy, name, sourceClusterGuid, sourceHost, targetPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetPolicy {\n");
    
    sb.append("    failoverFailbackState: ").append(toIndentedString(failoverFailbackState)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastJobState: ").append(toIndentedString(lastJobState)).append("\n");
    sb.append("    lastSourceCoordinatorIp: ").append(toIndentedString(lastSourceCoordinatorIp)).append("\n");
    sb.append("    lastUpdateFromSource: ").append(toIndentedString(lastUpdateFromSource)).append("\n");
    sb.append("    legacyPolicy: ").append(toIndentedString(legacyPolicy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sourceClusterGuid: ").append(toIndentedString(sourceClusterGuid)).append("\n");
    sb.append("    sourceHost: ").append(toIndentedString(sourceHost)).append("\n");
    sb.append("    targetPath: ").append(toIndentedString(targetPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

