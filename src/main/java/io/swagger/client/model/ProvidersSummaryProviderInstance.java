/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ProvidersSummaryProviderInstanceConnection;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ProvidersSummaryProviderInstance
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class ProvidersSummaryProviderInstance {
  @SerializedName("active_server")
  private String activeServer = null;

  @SerializedName("client_site")
  private String clientSite = null;

  @SerializedName("connections")
  private List<ProvidersSummaryProviderInstanceConnection> connections = null;

  @SerializedName("dc_site")
  private String dcSite = null;

  @SerializedName("forest")
  private String forest = null;

  @SerializedName("groupnet")
  private String groupnet = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Indicates the status of the provider.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OFFLINE("offline"),
    
    ACTIVE("active"),
    
    ONLINE("online"),
    
    INITIALIZING("initializing"),
    
    JOINING("joining"),
    
    DISABLED("disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * Specifies the type of provider.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FILE("file"),
    
    LDAP("ldap"),
    
    LOCAL("local"),
    
    NIS("nis"),
    
    ADS("ads"),
    
    KRB5("krb5"),
    
    UNKNOWN("unknown");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ProvidersSummaryProviderInstance activeServer(String activeServer) {
    this.activeServer = activeServer;
    return this;
  }

   /**
   * Get activeServer
   * @return activeServer
  **/
  @ApiModelProperty(value = "")
  public String getActiveServer() {
    return activeServer;
  }

  public void setActiveServer(String activeServer) {
    this.activeServer = activeServer;
  }

  public ProvidersSummaryProviderInstance clientSite(String clientSite) {
    this.clientSite = clientSite;
    return this;
  }

   /**
   * Get clientSite
   * @return clientSite
  **/
  @ApiModelProperty(value = "")
  public String getClientSite() {
    return clientSite;
  }

  public void setClientSite(String clientSite) {
    this.clientSite = clientSite;
  }

  public ProvidersSummaryProviderInstance connections(List<ProvidersSummaryProviderInstanceConnection> connections) {
    this.connections = connections;
    return this;
  }

  public ProvidersSummaryProviderInstance addConnectionsItem(ProvidersSummaryProviderInstanceConnection connectionsItem) {
    if (this.connections == null) {
      this.connections = new ArrayList<ProvidersSummaryProviderInstanceConnection>();
    }
    this.connections.add(connectionsItem);
    return this;
  }

   /**
   * Get connections
   * @return connections
  **/
  @ApiModelProperty(value = "")
  public List<ProvidersSummaryProviderInstanceConnection> getConnections() {
    return connections;
  }

  public void setConnections(List<ProvidersSummaryProviderInstanceConnection> connections) {
    this.connections = connections;
  }

  public ProvidersSummaryProviderInstance dcSite(String dcSite) {
    this.dcSite = dcSite;
    return this;
  }

   /**
   * Get dcSite
   * @return dcSite
  **/
  @ApiModelProperty(value = "")
  public String getDcSite() {
    return dcSite;
  }

  public void setDcSite(String dcSite) {
    this.dcSite = dcSite;
  }

  public ProvidersSummaryProviderInstance forest(String forest) {
    this.forest = forest;
    return this;
  }

   /**
   * Get forest
   * @return forest
  **/
  @ApiModelProperty(value = "")
  public String getForest() {
    return forest;
  }

  public void setForest(String forest) {
    this.forest = forest;
  }

  public ProvidersSummaryProviderInstance groupnet(String groupnet) {
    this.groupnet = groupnet;
    return this;
  }

   /**
   * Get groupnet
   * @return groupnet
  **/
  @ApiModelProperty(value = "")
  public String getGroupnet() {
    return groupnet;
  }

  public void setGroupnet(String groupnet) {
    this.groupnet = groupnet;
  }

  public ProvidersSummaryProviderInstance id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Specifies the ID of the provider.
   * @return id
  **/
  @ApiModelProperty(value = "Specifies the ID of the provider.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProvidersSummaryProviderInstance name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Specifies the name of the provider.
   * @return name
  **/
  @ApiModelProperty(value = "Specifies the name of the provider.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProvidersSummaryProviderInstance status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Indicates the status of the provider.
   * @return status
  **/
  @ApiModelProperty(value = "Indicates the status of the provider.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ProvidersSummaryProviderInstance type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Specifies the type of provider.
   * @return type
  **/
  @ApiModelProperty(value = "Specifies the type of provider.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvidersSummaryProviderInstance providersSummaryProviderInstance = (ProvidersSummaryProviderInstance) o;
    return Objects.equals(this.activeServer, providersSummaryProviderInstance.activeServer) &&
        Objects.equals(this.clientSite, providersSummaryProviderInstance.clientSite) &&
        Objects.equals(this.connections, providersSummaryProviderInstance.connections) &&
        Objects.equals(this.dcSite, providersSummaryProviderInstance.dcSite) &&
        Objects.equals(this.forest, providersSummaryProviderInstance.forest) &&
        Objects.equals(this.groupnet, providersSummaryProviderInstance.groupnet) &&
        Objects.equals(this.id, providersSummaryProviderInstance.id) &&
        Objects.equals(this.name, providersSummaryProviderInstance.name) &&
        Objects.equals(this.status, providersSummaryProviderInstance.status) &&
        Objects.equals(this.type, providersSummaryProviderInstance.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeServer, clientSite, connections, dcSite, forest, groupnet, id, name, status, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvidersSummaryProviderInstance {\n");
    
    sb.append("    activeServer: ").append(toIndentedString(activeServer)).append("\n");
    sb.append("    clientSite: ").append(toIndentedString(clientSite)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    dcSite: ").append(toIndentedString(dcSite)).append("\n");
    sb.append("    forest: ").append(toIndentedString(forest)).append("\n");
    sb.append("    groupnet: ").append(toIndentedString(groupnet)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

