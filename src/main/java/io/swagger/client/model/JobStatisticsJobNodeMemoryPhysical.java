/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * JobStatisticsJobNodeMemoryPhysical
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class JobStatisticsJobNodeMemoryPhysical {
  @SerializedName("average")
  private BigDecimal average = null;

  @SerializedName("current")
  private BigDecimal current = null;

  @SerializedName("maximum")
  private BigDecimal maximum = null;

  @SerializedName("minimum")
  private BigDecimal minimum = null;

  public JobStatisticsJobNodeMemoryPhysical average(BigDecimal average) {
    this.average = average;
    return this;
  }

   /**
   * The average physical memory utilization of the job on this node, in KB.
   * @return average
  **/
  @ApiModelProperty(value = "The average physical memory utilization of the job on this node, in KB.")
  public BigDecimal getAverage() {
    return average;
  }

  public void setAverage(BigDecimal average) {
    this.average = average;
  }

  public JobStatisticsJobNodeMemoryPhysical current(BigDecimal current) {
    this.current = current;
    return this;
  }

   /**
   * The current physical memory utilization of the job on this node, in KB.
   * @return current
  **/
  @ApiModelProperty(required = true, value = "The current physical memory utilization of the job on this node, in KB.")
  public BigDecimal getCurrent() {
    return current;
  }

  public void setCurrent(BigDecimal current) {
    this.current = current;
  }

  public JobStatisticsJobNodeMemoryPhysical maximum(BigDecimal maximum) {
    this.maximum = maximum;
    return this;
  }

   /**
   * The maximum physical memory utilization of the job on this node, in KB.
   * @return maximum
  **/
  @ApiModelProperty(required = true, value = "The maximum physical memory utilization of the job on this node, in KB.")
  public BigDecimal getMaximum() {
    return maximum;
  }

  public void setMaximum(BigDecimal maximum) {
    this.maximum = maximum;
  }

  public JobStatisticsJobNodeMemoryPhysical minimum(BigDecimal minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * The minimum physical memory utilization of the job on this node, in KB.
   * @return minimum
  **/
  @ApiModelProperty(required = true, value = "The minimum physical memory utilization of the job on this node, in KB.")
  public BigDecimal getMinimum() {
    return minimum;
  }

  public void setMinimum(BigDecimal minimum) {
    this.minimum = minimum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobStatisticsJobNodeMemoryPhysical jobStatisticsJobNodeMemoryPhysical = (JobStatisticsJobNodeMemoryPhysical) o;
    return Objects.equals(this.average, jobStatisticsJobNodeMemoryPhysical.average) &&
        Objects.equals(this.current, jobStatisticsJobNodeMemoryPhysical.current) &&
        Objects.equals(this.maximum, jobStatisticsJobNodeMemoryPhysical.maximum) &&
        Objects.equals(this.minimum, jobStatisticsJobNodeMemoryPhysical.minimum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(average, current, maximum, minimum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobStatisticsJobNodeMemoryPhysical {\n");
    
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

