/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CloudJobFilesName;
import io.swagger.client.model.Empty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CloudJobFiles
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class CloudJobFiles {
  @SerializedName("file_matching_pattern")
  private Empty fileMatchingPattern = null;

  @SerializedName("names")
  private List<CloudJobFilesName> names = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("total_canceled")
  private Integer totalCanceled = null;

  @SerializedName("total_failed")
  private Integer totalFailed = null;

  @SerializedName("total_pending")
  private Integer totalPending = null;

  @SerializedName("total_processing")
  private Integer totalProcessing = null;

  @SerializedName("total_succeeded")
  private Integer totalSucceeded = null;

  public CloudJobFiles fileMatchingPattern(Empty fileMatchingPattern) {
    this.fileMatchingPattern = fileMatchingPattern;
    return this;
  }

   /**
   * The file filtering logic to find files for this job
   * @return fileMatchingPattern
  **/
  @ApiModelProperty(value = "The file filtering logic to find files for this job")
  public Empty getFileMatchingPattern() {
    return fileMatchingPattern;
  }

  public void setFileMatchingPattern(Empty fileMatchingPattern) {
    this.fileMatchingPattern = fileMatchingPattern;
  }

  public CloudJobFiles names(List<CloudJobFilesName> names) {
    this.names = names;
    return this;
  }

  public CloudJobFiles addNamesItem(CloudJobFilesName namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<CloudJobFilesName>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * A list of files to be addressed by this job.  (Note* these are only reported when audit_level is &#39;high&#39;
   * @return names
  **/
  @ApiModelProperty(value = "A list of files to be addressed by this job.  (Note* these are only reported when audit_level is 'high'")
  public List<CloudJobFilesName> getNames() {
    return names;
  }

  public void setNames(List<CloudJobFilesName> names) {
    this.names = names;
  }

  public CloudJobFiles total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * The total number of files addressed by this job
   * @return total
  **/
  @ApiModelProperty(value = "The total number of files addressed by this job")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public CloudJobFiles totalCanceled(Integer totalCanceled) {
    this.totalCanceled = totalCanceled;
    return this;
  }

   /**
   * The number of canceled files
   * @return totalCanceled
  **/
  @ApiModelProperty(value = "The number of canceled files")
  public Integer getTotalCanceled() {
    return totalCanceled;
  }

  public void setTotalCanceled(Integer totalCanceled) {
    this.totalCanceled = totalCanceled;
  }

  public CloudJobFiles totalFailed(Integer totalFailed) {
    this.totalFailed = totalFailed;
    return this;
  }

   /**
   * The number of files which failed
   * @return totalFailed
  **/
  @ApiModelProperty(value = "The number of files which failed")
  public Integer getTotalFailed() {
    return totalFailed;
  }

  public void setTotalFailed(Integer totalFailed) {
    this.totalFailed = totalFailed;
  }

  public CloudJobFiles totalPending(Integer totalPending) {
    this.totalPending = totalPending;
    return this;
  }

   /**
   * The number of files pending action
   * @return totalPending
  **/
  @ApiModelProperty(value = "The number of files pending action")
  public Integer getTotalPending() {
    return totalPending;
  }

  public void setTotalPending(Integer totalPending) {
    this.totalPending = totalPending;
  }

  public CloudJobFiles totalProcessing(Integer totalProcessing) {
    this.totalProcessing = totalProcessing;
    return this;
  }

   /**
   * The number of files currently being processed
   * @return totalProcessing
  **/
  @ApiModelProperty(value = "The number of files currently being processed")
  public Integer getTotalProcessing() {
    return totalProcessing;
  }

  public void setTotalProcessing(Integer totalProcessing) {
    this.totalProcessing = totalProcessing;
  }

  public CloudJobFiles totalSucceeded(Integer totalSucceeded) {
    this.totalSucceeded = totalSucceeded;
    return this;
  }

   /**
   * The total number of files successfully completed
   * @return totalSucceeded
  **/
  @ApiModelProperty(value = "The total number of files successfully completed")
  public Integer getTotalSucceeded() {
    return totalSucceeded;
  }

  public void setTotalSucceeded(Integer totalSucceeded) {
    this.totalSucceeded = totalSucceeded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudJobFiles cloudJobFiles = (CloudJobFiles) o;
    return Objects.equals(this.fileMatchingPattern, cloudJobFiles.fileMatchingPattern) &&
        Objects.equals(this.names, cloudJobFiles.names) &&
        Objects.equals(this.total, cloudJobFiles.total) &&
        Objects.equals(this.totalCanceled, cloudJobFiles.totalCanceled) &&
        Objects.equals(this.totalFailed, cloudJobFiles.totalFailed) &&
        Objects.equals(this.totalPending, cloudJobFiles.totalPending) &&
        Objects.equals(this.totalProcessing, cloudJobFiles.totalProcessing) &&
        Objects.equals(this.totalSucceeded, cloudJobFiles.totalSucceeded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileMatchingPattern, names, total, totalCanceled, totalFailed, totalPending, totalProcessing, totalSucceeded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudJobFiles {\n");
    
    sb.append("    fileMatchingPattern: ").append(toIndentedString(fileMatchingPattern)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalCanceled: ").append(toIndentedString(totalCanceled)).append("\n");
    sb.append("    totalFailed: ").append(toIndentedString(totalFailed)).append("\n");
    sb.append("    totalPending: ").append(toIndentedString(totalPending)).append("\n");
    sb.append("    totalProcessing: ").append(toIndentedString(totalProcessing)).append("\n");
    sb.append("    totalSucceeded: ").append(toIndentedString(totalSucceeded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

