/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SettingsMappingMappingSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class SettingsMappingMappingSettings {
  @SerializedName("cache_entry_expiry")
  private Integer cacheEntryExpiry = null;

  @SerializedName("gid_range_enabled")
  private Boolean gidRangeEnabled = null;

  @SerializedName("gid_range_max")
  private Integer gidRangeMax = null;

  @SerializedName("gid_range_min")
  private Integer gidRangeMin = null;

  @SerializedName("gid_range_next")
  private Integer gidRangeNext = null;

  @SerializedName("uid_range_enabled")
  private Boolean uidRangeEnabled = null;

  @SerializedName("uid_range_max")
  private Integer uidRangeMax = null;

  @SerializedName("uid_range_min")
  private Integer uidRangeMin = null;

  @SerializedName("uid_range_next")
  private Integer uidRangeNext = null;

  public SettingsMappingMappingSettings cacheEntryExpiry(Integer cacheEntryExpiry) {
    this.cacheEntryExpiry = cacheEntryExpiry;
    return this;
  }

   /**
   * Specifies the cache expiry in seconds of the idmapper.
   * minimum: 0
   * maximum: 15552000
   * @return cacheEntryExpiry
  **/
  @ApiModelProperty(value = "Specifies the cache expiry in seconds of the idmapper.")
  public Integer getCacheEntryExpiry() {
    return cacheEntryExpiry;
  }

  public void setCacheEntryExpiry(Integer cacheEntryExpiry) {
    this.cacheEntryExpiry = cacheEntryExpiry;
  }

  public SettingsMappingMappingSettings gidRangeEnabled(Boolean gidRangeEnabled) {
    this.gidRangeEnabled = gidRangeEnabled;
    return this;
  }

   /**
   * If true, allocates GIDs from a fixed range.
   * @return gidRangeEnabled
  **/
  @ApiModelProperty(value = "If true, allocates GIDs from a fixed range.")
  public Boolean isGidRangeEnabled() {
    return gidRangeEnabled;
  }

  public void setGidRangeEnabled(Boolean gidRangeEnabled) {
    this.gidRangeEnabled = gidRangeEnabled;
  }

  public SettingsMappingMappingSettings gidRangeMax(Integer gidRangeMax) {
    this.gidRangeMax = gidRangeMax;
    return this;
  }

   /**
   * Specifies the ending number for a fixed range from which GIDs are allocated.
   * minimum: 0
   * maximum: 4294967295
   * @return gidRangeMax
  **/
  @ApiModelProperty(value = "Specifies the ending number for a fixed range from which GIDs are allocated.")
  public Integer getGidRangeMax() {
    return gidRangeMax;
  }

  public void setGidRangeMax(Integer gidRangeMax) {
    this.gidRangeMax = gidRangeMax;
  }

  public SettingsMappingMappingSettings gidRangeMin(Integer gidRangeMin) {
    this.gidRangeMin = gidRangeMin;
    return this;
  }

   /**
   * Specifies the starting number for a fixed range from which GIDs are allocated.
   * minimum: 0
   * maximum: 4294967295
   * @return gidRangeMin
  **/
  @ApiModelProperty(value = "Specifies the starting number for a fixed range from which GIDs are allocated.")
  public Integer getGidRangeMin() {
    return gidRangeMin;
  }

  public void setGidRangeMin(Integer gidRangeMin) {
    this.gidRangeMin = gidRangeMin;
  }

  public SettingsMappingMappingSettings gidRangeNext(Integer gidRangeNext) {
    this.gidRangeNext = gidRangeNext;
    return this;
  }

   /**
   * Specifies the next GID to allocate.
   * minimum: 0
   * maximum: 4294967295
   * @return gidRangeNext
  **/
  @ApiModelProperty(value = "Specifies the next GID to allocate.")
  public Integer getGidRangeNext() {
    return gidRangeNext;
  }

  public void setGidRangeNext(Integer gidRangeNext) {
    this.gidRangeNext = gidRangeNext;
  }

  public SettingsMappingMappingSettings uidRangeEnabled(Boolean uidRangeEnabled) {
    this.uidRangeEnabled = uidRangeEnabled;
    return this;
  }

   /**
   * If true, allocates UIDs from a fixed range.
   * @return uidRangeEnabled
  **/
  @ApiModelProperty(value = "If true, allocates UIDs from a fixed range.")
  public Boolean isUidRangeEnabled() {
    return uidRangeEnabled;
  }

  public void setUidRangeEnabled(Boolean uidRangeEnabled) {
    this.uidRangeEnabled = uidRangeEnabled;
  }

  public SettingsMappingMappingSettings uidRangeMax(Integer uidRangeMax) {
    this.uidRangeMax = uidRangeMax;
    return this;
  }

   /**
   * Specifies the ending number for a fixed range from which UIDs are allocated.
   * minimum: 0
   * maximum: 4294967295
   * @return uidRangeMax
  **/
  @ApiModelProperty(value = "Specifies the ending number for a fixed range from which UIDs are allocated.")
  public Integer getUidRangeMax() {
    return uidRangeMax;
  }

  public void setUidRangeMax(Integer uidRangeMax) {
    this.uidRangeMax = uidRangeMax;
  }

  public SettingsMappingMappingSettings uidRangeMin(Integer uidRangeMin) {
    this.uidRangeMin = uidRangeMin;
    return this;
  }

   /**
   * Specifies the starting number for a fixed range from which UIDs are allocated.
   * minimum: 0
   * maximum: 4294967295
   * @return uidRangeMin
  **/
  @ApiModelProperty(value = "Specifies the starting number for a fixed range from which UIDs are allocated.")
  public Integer getUidRangeMin() {
    return uidRangeMin;
  }

  public void setUidRangeMin(Integer uidRangeMin) {
    this.uidRangeMin = uidRangeMin;
  }

  public SettingsMappingMappingSettings uidRangeNext(Integer uidRangeNext) {
    this.uidRangeNext = uidRangeNext;
    return this;
  }

   /**
   * Specifies the next UID to allocate.
   * minimum: 0
   * maximum: 4294967295
   * @return uidRangeNext
  **/
  @ApiModelProperty(value = "Specifies the next UID to allocate.")
  public Integer getUidRangeNext() {
    return uidRangeNext;
  }

  public void setUidRangeNext(Integer uidRangeNext) {
    this.uidRangeNext = uidRangeNext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsMappingMappingSettings settingsMappingMappingSettings = (SettingsMappingMappingSettings) o;
    return Objects.equals(this.cacheEntryExpiry, settingsMappingMappingSettings.cacheEntryExpiry) &&
        Objects.equals(this.gidRangeEnabled, settingsMappingMappingSettings.gidRangeEnabled) &&
        Objects.equals(this.gidRangeMax, settingsMappingMappingSettings.gidRangeMax) &&
        Objects.equals(this.gidRangeMin, settingsMappingMappingSettings.gidRangeMin) &&
        Objects.equals(this.gidRangeNext, settingsMappingMappingSettings.gidRangeNext) &&
        Objects.equals(this.uidRangeEnabled, settingsMappingMappingSettings.uidRangeEnabled) &&
        Objects.equals(this.uidRangeMax, settingsMappingMappingSettings.uidRangeMax) &&
        Objects.equals(this.uidRangeMin, settingsMappingMappingSettings.uidRangeMin) &&
        Objects.equals(this.uidRangeNext, settingsMappingMappingSettings.uidRangeNext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheEntryExpiry, gidRangeEnabled, gidRangeMax, gidRangeMin, gidRangeNext, uidRangeEnabled, uidRangeMax, uidRangeMin, uidRangeNext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsMappingMappingSettings {\n");
    
    sb.append("    cacheEntryExpiry: ").append(toIndentedString(cacheEntryExpiry)).append("\n");
    sb.append("    gidRangeEnabled: ").append(toIndentedString(gidRangeEnabled)).append("\n");
    sb.append("    gidRangeMax: ").append(toIndentedString(gidRangeMax)).append("\n");
    sb.append("    gidRangeMin: ").append(toIndentedString(gidRangeMin)).append("\n");
    sb.append("    gidRangeNext: ").append(toIndentedString(gidRangeNext)).append("\n");
    sb.append("    uidRangeEnabled: ").append(toIndentedString(uidRangeEnabled)).append("\n");
    sb.append("    uidRangeMax: ").append(toIndentedString(uidRangeMax)).append("\n");
    sb.append("    uidRangeMin: ").append(toIndentedString(uidRangeMin)).append("\n");
    sb.append("    uidRangeNext: ").append(toIndentedString(uidRangeNext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

