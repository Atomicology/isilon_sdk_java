/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The quarantine status of a file in /ifs.
 */
@ApiModel(description = "The quarantine status of a file in /ifs.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class AntivirusQuarantine {
  @SerializedName("file")
  private String file = null;

  @SerializedName("last_istag")
  private String lastIstag = null;

  @SerializedName("last_scan")
  private Integer lastScan = null;

  @SerializedName("quarantined")
  private Boolean quarantined = null;

  @SerializedName("scan_result")
  private String scanResult = null;

  /**
   * The scanning status of this file.  If &#39;current&#39;, the file was scanned with the most up-to-date virus definitions.  If &#39;not_current&#39;, it has either not been scanned, been modified since the last scan, or the virus definitions are not current.
   */
  @JsonAdapter(ScanStatusEnum.Adapter.class)
  public enum ScanStatusEnum {
    CURRENT("current"),
    
    NOT_CURRENT("not_current");

    private String value;

    ScanStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScanStatusEnum fromValue(String text) {
      for (ScanStatusEnum b : ScanStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ScanStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScanStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScanStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ScanStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("scan_status")
  private ScanStatusEnum scanStatus = null;

  public AntivirusQuarantine file(String file) {
    this.file = file;
    return this;
  }

   /**
   * Path of this file, starting with /ifs.
   * @return file
  **/
  @ApiModelProperty(required = true, value = "Path of this file, starting with /ifs.")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public AntivirusQuarantine lastIstag(String lastIstag) {
    this.lastIstag = lastIstag;
    return this;
  }

   /**
   * Get lastIstag
   * @return lastIstag
  **/
  @ApiModelProperty(value = "")
  public String getLastIstag() {
    return lastIstag;
  }

  public void setLastIstag(String lastIstag) {
    this.lastIstag = lastIstag;
  }

  public AntivirusQuarantine lastScan(Integer lastScan) {
    this.lastScan = lastScan;
    return this;
  }

   /**
   * Get lastScan
   * minimum: 0
   * maximum: 4294967295
   * @return lastScan
  **/
  @ApiModelProperty(value = "")
  public Integer getLastScan() {
    return lastScan;
  }

  public void setLastScan(Integer lastScan) {
    this.lastScan = lastScan;
  }

  public AntivirusQuarantine quarantined(Boolean quarantined) {
    this.quarantined = quarantined;
    return this;
  }

   /**
   * If true, this file is quarantined.  If false, the file is not quarantined.
   * @return quarantined
  **/
  @ApiModelProperty(required = true, value = "If true, this file is quarantined.  If false, the file is not quarantined.")
  public Boolean isQuarantined() {
    return quarantined;
  }

  public void setQuarantined(Boolean quarantined) {
    this.quarantined = quarantined;
  }

  public AntivirusQuarantine scanResult(String scanResult) {
    this.scanResult = scanResult;
    return this;
  }

   /**
   * The result of the last scan on this file.  This string is usually one of: never_scanned, clean, quarantined, repaired, truncated, infected_no_action_taken, skipped_per_settings.  However, a longer string starting with &#39;unknown_status&#39; and describing the details can also appear in uncommon edge cases.
   * @return scanResult
  **/
  @ApiModelProperty(required = true, value = "The result of the last scan on this file.  This string is usually one of: never_scanned, clean, quarantined, repaired, truncated, infected_no_action_taken, skipped_per_settings.  However, a longer string starting with 'unknown_status' and describing the details can also appear in uncommon edge cases.")
  public String getScanResult() {
    return scanResult;
  }

  public void setScanResult(String scanResult) {
    this.scanResult = scanResult;
  }

  public AntivirusQuarantine scanStatus(ScanStatusEnum scanStatus) {
    this.scanStatus = scanStatus;
    return this;
  }

   /**
   * The scanning status of this file.  If &#39;current&#39;, the file was scanned with the most up-to-date virus definitions.  If &#39;not_current&#39;, it has either not been scanned, been modified since the last scan, or the virus definitions are not current.
   * @return scanStatus
  **/
  @ApiModelProperty(required = true, value = "The scanning status of this file.  If 'current', the file was scanned with the most up-to-date virus definitions.  If 'not_current', it has either not been scanned, been modified since the last scan, or the virus definitions are not current.")
  public ScanStatusEnum getScanStatus() {
    return scanStatus;
  }

  public void setScanStatus(ScanStatusEnum scanStatus) {
    this.scanStatus = scanStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AntivirusQuarantine antivirusQuarantine = (AntivirusQuarantine) o;
    return Objects.equals(this.file, antivirusQuarantine.file) &&
        Objects.equals(this.lastIstag, antivirusQuarantine.lastIstag) &&
        Objects.equals(this.lastScan, antivirusQuarantine.lastScan) &&
        Objects.equals(this.quarantined, antivirusQuarantine.quarantined) &&
        Objects.equals(this.scanResult, antivirusQuarantine.scanResult) &&
        Objects.equals(this.scanStatus, antivirusQuarantine.scanStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(file, lastIstag, lastScan, quarantined, scanResult, scanStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AntivirusQuarantine {\n");
    
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    lastIstag: ").append(toIndentedString(lastIstag)).append("\n");
    sb.append("    lastScan: ").append(toIndentedString(lastScan)).append("\n");
    sb.append("    quarantined: ").append(toIndentedString(quarantined)).append("\n");
    sb.append("    scanResult: ").append(toIndentedString(scanResult)).append("\n");
    sb.append("    scanStatus: ").append(toIndentedString(scanStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

