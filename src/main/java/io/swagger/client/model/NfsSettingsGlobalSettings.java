/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NfsSettingsGlobalSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class NfsSettingsGlobalSettings {
  @SerializedName("nfsv3_enabled")
  private Boolean nfsv3Enabled = null;

  @SerializedName("nfsv4_enabled")
  private Boolean nfsv4Enabled = null;

  @SerializedName("rpc_maxthreads")
  private Integer rpcMaxthreads = null;

  @SerializedName("rpc_minthreads")
  private Integer rpcMinthreads = null;

  @SerializedName("service")
  private Boolean service = null;

  public NfsSettingsGlobalSettings nfsv3Enabled(Boolean nfsv3Enabled) {
    this.nfsv3Enabled = nfsv3Enabled;
    return this;
  }

   /**
   * True if NFSv3 is enabled.
   * @return nfsv3Enabled
  **/
  @ApiModelProperty(value = "True if NFSv3 is enabled.")
  public Boolean isNfsv3Enabled() {
    return nfsv3Enabled;
  }

  public void setNfsv3Enabled(Boolean nfsv3Enabled) {
    this.nfsv3Enabled = nfsv3Enabled;
  }

  public NfsSettingsGlobalSettings nfsv4Enabled(Boolean nfsv4Enabled) {
    this.nfsv4Enabled = nfsv4Enabled;
    return this;
  }

   /**
   * True if NFSv4 is enabled.
   * @return nfsv4Enabled
  **/
  @ApiModelProperty(value = "True if NFSv4 is enabled.")
  public Boolean isNfsv4Enabled() {
    return nfsv4Enabled;
  }

  public void setNfsv4Enabled(Boolean nfsv4Enabled) {
    this.nfsv4Enabled = nfsv4Enabled;
  }

  public NfsSettingsGlobalSettings rpcMaxthreads(Integer rpcMaxthreads) {
    this.rpcMaxthreads = rpcMaxthreads;
    return this;
  }

   /**
   * Specifies the maximum number of threads in the nfsd thread pool.
   * @return rpcMaxthreads
  **/
  @ApiModelProperty(value = "Specifies the maximum number of threads in the nfsd thread pool.")
  public Integer getRpcMaxthreads() {
    return rpcMaxthreads;
  }

  public void setRpcMaxthreads(Integer rpcMaxthreads) {
    this.rpcMaxthreads = rpcMaxthreads;
  }

  public NfsSettingsGlobalSettings rpcMinthreads(Integer rpcMinthreads) {
    this.rpcMinthreads = rpcMinthreads;
    return this;
  }

   /**
   * Specifies the minimum number of threads in the nfsd thread pool.
   * @return rpcMinthreads
  **/
  @ApiModelProperty(value = "Specifies the minimum number of threads in the nfsd thread pool.")
  public Integer getRpcMinthreads() {
    return rpcMinthreads;
  }

  public void setRpcMinthreads(Integer rpcMinthreads) {
    this.rpcMinthreads = rpcMinthreads;
  }

  public NfsSettingsGlobalSettings service(Boolean service) {
    this.service = service;
    return this;
  }

   /**
   * True if the NFS service is enabled. When set to false, the NFS service is disabled.
   * @return service
  **/
  @ApiModelProperty(value = "True if the NFS service is enabled. When set to false, the NFS service is disabled.")
  public Boolean isService() {
    return service;
  }

  public void setService(Boolean service) {
    this.service = service;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfsSettingsGlobalSettings nfsSettingsGlobalSettings = (NfsSettingsGlobalSettings) o;
    return Objects.equals(this.nfsv3Enabled, nfsSettingsGlobalSettings.nfsv3Enabled) &&
        Objects.equals(this.nfsv4Enabled, nfsSettingsGlobalSettings.nfsv4Enabled) &&
        Objects.equals(this.rpcMaxthreads, nfsSettingsGlobalSettings.rpcMaxthreads) &&
        Objects.equals(this.rpcMinthreads, nfsSettingsGlobalSettings.rpcMinthreads) &&
        Objects.equals(this.service, nfsSettingsGlobalSettings.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nfsv3Enabled, nfsv4Enabled, rpcMaxthreads, rpcMinthreads, service);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfsSettingsGlobalSettings {\n");
    
    sb.append("    nfsv3Enabled: ").append(toIndentedString(nfsv3Enabled)).append("\n");
    sb.append("    nfsv4Enabled: ").append(toIndentedString(nfsv4Enabled)).append("\n");
    sb.append("    rpcMaxthreads: ").append(toIndentedString(rpcMaxthreads)).append("\n");
    sb.append("    rpcMinthreads: ").append(toIndentedString(rpcMinthreads)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

