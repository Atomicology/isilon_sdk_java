/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SettingsCharacterEncodingsSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class SettingsCharacterEncodingsSettings {
  @SerializedName("current-encoding")
  private String currentEncoding = null;

  @SerializedName("default-encoding")
  private String defaultEncoding = null;

  @SerializedName("encodings")
  private List<String> encodings = new ArrayList<String>();

  public SettingsCharacterEncodingsSettings currentEncoding(String currentEncoding) {
    this.currentEncoding = currentEncoding;
    return this;
  }

   /**
   * Current character encoding.
   * @return currentEncoding
  **/
  @ApiModelProperty(required = true, value = "Current character encoding.")
  public String getCurrentEncoding() {
    return currentEncoding;
  }

  public void setCurrentEncoding(String currentEncoding) {
    this.currentEncoding = currentEncoding;
  }

  public SettingsCharacterEncodingsSettings defaultEncoding(String defaultEncoding) {
    this.defaultEncoding = defaultEncoding;
    return this;
  }

   /**
   * Default character encoding.
   * @return defaultEncoding
  **/
  @ApiModelProperty(required = true, value = "Default character encoding.")
  public String getDefaultEncoding() {
    return defaultEncoding;
  }

  public void setDefaultEncoding(String defaultEncoding) {
    this.defaultEncoding = defaultEncoding;
  }

  public SettingsCharacterEncodingsSettings encodings(List<String> encodings) {
    this.encodings = encodings;
    return this;
  }

  public SettingsCharacterEncodingsSettings addEncodingsItem(String encodingsItem) {
    this.encodings.add(encodingsItem);
    return this;
  }

   /**
   * A list of supported encoding values.
   * @return encodings
  **/
  @ApiModelProperty(required = true, value = "A list of supported encoding values.")
  public List<String> getEncodings() {
    return encodings;
  }

  public void setEncodings(List<String> encodings) {
    this.encodings = encodings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsCharacterEncodingsSettings settingsCharacterEncodingsSettings = (SettingsCharacterEncodingsSettings) o;
    return Objects.equals(this.currentEncoding, settingsCharacterEncodingsSettings.currentEncoding) &&
        Objects.equals(this.defaultEncoding, settingsCharacterEncodingsSettings.defaultEncoding) &&
        Objects.equals(this.encodings, settingsCharacterEncodingsSettings.encodings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentEncoding, defaultEncoding, encodings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsCharacterEncodingsSettings {\n");
    
    sb.append("    currentEncoding: ").append(toIndentedString(currentEncoding)).append("\n");
    sb.append("    defaultEncoding: ").append(toIndentedString(defaultEncoding)).append("\n");
    sb.append("    encodings: ").append(toIndentedString(encodings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

