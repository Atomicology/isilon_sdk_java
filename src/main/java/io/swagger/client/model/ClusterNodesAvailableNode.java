/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ClusterNodesAvailableNode
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class ClusterNodesAvailableNode {
  @SerializedName("configuration_id")
  private String configurationId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("product")
  private String product = null;

  @SerializedName("serial_number")
  private String serialNumber = null;

  /**
   * Availability of the node.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    AVAILABLE("available"),
    
    WAITING("waiting"),
    
    ERROR("error"),
    
    ERROR_PERMANENT("error_permanent"),
    
    WORKING("working"),
    
    REBOOTING("rebooting"),
    
    EXITING("exiting");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("version")
  private String version = null;

  public ClusterNodesAvailableNode configurationId(String configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Node configuration ID.
   * @return configurationId
  **/
  @ApiModelProperty(value = "Node configuration ID.")
  public String getConfigurationId() {
    return configurationId;
  }

  public void setConfigurationId(String configurationId) {
    this.configurationId = configurationId;
  }

  public ClusterNodesAvailableNode description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Human-readable description giving further detail on status (may be empty)
   * @return description
  **/
  @ApiModelProperty(value = "Human-readable description giving further detail on status (may be empty)")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ClusterNodesAvailableNode product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Isilon product name.
   * @return product
  **/
  @ApiModelProperty(value = "Isilon product name.")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public ClusterNodesAvailableNode serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Serial number of this node.
   * @return serialNumber
  **/
  @ApiModelProperty(value = "Serial number of this node.")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public ClusterNodesAvailableNode status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Availability of the node.
   * @return status
  **/
  @ApiModelProperty(value = "Availability of the node.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ClusterNodesAvailableNode version(String version) {
    this.version = version;
    return this;
  }

   /**
   * OneFS build version running on the node.
   * @return version
  **/
  @ApiModelProperty(value = "OneFS build version running on the node.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterNodesAvailableNode clusterNodesAvailableNode = (ClusterNodesAvailableNode) o;
    return Objects.equals(this.configurationId, clusterNodesAvailableNode.configurationId) &&
        Objects.equals(this.description, clusterNodesAvailableNode.description) &&
        Objects.equals(this.product, clusterNodesAvailableNode.product) &&
        Objects.equals(this.serialNumber, clusterNodesAvailableNode.serialNumber) &&
        Objects.equals(this.status, clusterNodesAvailableNode.status) &&
        Objects.equals(this.version, clusterNodesAvailableNode.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configurationId, description, product, serialNumber, status, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterNodesAvailableNode {\n");
    
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

