/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NdmpContextsBreEnvVariable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * View a NDMP restartable backup Context
 */
@ApiModel(description = "View a NDMP restartable backup Context")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class NdmpContextsBre {
  @SerializedName("backup type")
  private String backupType = null;

  @SerializedName("bkp_context_id")
  private String bkpContextId = null;

  @SerializedName("bre_context_id")
  private String breContextId = null;

  @SerializedName("create_time")
  private Integer createTime = null;

  @SerializedName("env_variables")
  private List<NdmpContextsBreEnvVariable> envVariables = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("results")
  private Integer results = null;

  @SerializedName("snap_name")
  private String snapName = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("stream_id")
  private Integer streamId = null;

  public NdmpContextsBre backupType(String backupType) {
    this.backupType = backupType;
    return this;
  }

   /**
   * Backup type
   * @return backupType
  **/
  @ApiModelProperty(value = "Backup type")
  public String getBackupType() {
    return backupType;
  }

  public void setBackupType(String backupType) {
    this.backupType = backupType;
  }

  public NdmpContextsBre bkpContextId(String bkpContextId) {
    this.bkpContextId = bkpContextId;
    return this;
  }

   /**
   * Backup Context ID
   * @return bkpContextId
  **/
  @ApiModelProperty(value = "Backup Context ID")
  public String getBkpContextId() {
    return bkpContextId;
  }

  public void setBkpContextId(String bkpContextId) {
    this.bkpContextId = bkpContextId;
  }

  public NdmpContextsBre breContextId(String breContextId) {
    this.breContextId = breContextId;
    return this;
  }

   /**
   * Unique ID of NDMP BRE context
   * @return breContextId
  **/
  @ApiModelProperty(value = "Unique ID of NDMP BRE context")
  public String getBreContextId() {
    return breContextId;
  }

  public void setBreContextId(String breContextId) {
    this.breContextId = breContextId;
  }

  public NdmpContextsBre createTime(Integer createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Context creation time
   * @return createTime
  **/
  @ApiModelProperty(value = "Context creation time")
  public Integer getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Integer createTime) {
    this.createTime = createTime;
  }

  public NdmpContextsBre envVariables(List<NdmpContextsBreEnvVariable> envVariables) {
    this.envVariables = envVariables;
    return this;
  }

  public NdmpContextsBre addEnvVariablesItem(NdmpContextsBreEnvVariable envVariablesItem) {
    if (this.envVariables == null) {
      this.envVariables = new ArrayList<NdmpContextsBreEnvVariable>();
    }
    this.envVariables.add(envVariablesItem);
    return this;
  }

   /**
   * List of environment variables for restartable backup
   * @return envVariables
  **/
  @ApiModelProperty(value = "List of environment variables for restartable backup")
  public List<NdmpContextsBreEnvVariable> getEnvVariables() {
    return envVariables;
  }

  public void setEnvVariables(List<NdmpContextsBreEnvVariable> envVariables) {
    this.envVariables = envVariables;
  }

  public NdmpContextsBre id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique display id.
   * @return id
  **/
  @ApiModelProperty(value = "Unique display id.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NdmpContextsBre results(Integer results) {
    this.results = results;
    return this;
  }

   /**
   * Backup result
   * @return results
  **/
  @ApiModelProperty(value = "Backup result")
  public Integer getResults() {
    return results;
  }

  public void setResults(Integer results) {
    this.results = results;
  }

  public NdmpContextsBre snapName(String snapName) {
    this.snapName = snapName;
    return this;
  }

   /**
   * Snapshot name of backup
   * @return snapName
  **/
  @ApiModelProperty(value = "Snapshot name of backup")
  public String getSnapName() {
    return snapName;
  }

  public void setSnapName(String snapName) {
    this.snapName = snapName;
  }

  public NdmpContextsBre status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Context status bits
   * @return status
  **/
  @ApiModelProperty(value = "Context status bits")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public NdmpContextsBre streamId(Integer streamId) {
    this.streamId = streamId;
    return this;
  }

   /**
   * Backup Stream ID
   * @return streamId
  **/
  @ApiModelProperty(value = "Backup Stream ID")
  public Integer getStreamId() {
    return streamId;
  }

  public void setStreamId(Integer streamId) {
    this.streamId = streamId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NdmpContextsBre ndmpContextsBre = (NdmpContextsBre) o;
    return Objects.equals(this.backupType, ndmpContextsBre.backupType) &&
        Objects.equals(this.bkpContextId, ndmpContextsBre.bkpContextId) &&
        Objects.equals(this.breContextId, ndmpContextsBre.breContextId) &&
        Objects.equals(this.createTime, ndmpContextsBre.createTime) &&
        Objects.equals(this.envVariables, ndmpContextsBre.envVariables) &&
        Objects.equals(this.id, ndmpContextsBre.id) &&
        Objects.equals(this.results, ndmpContextsBre.results) &&
        Objects.equals(this.snapName, ndmpContextsBre.snapName) &&
        Objects.equals(this.status, ndmpContextsBre.status) &&
        Objects.equals(this.streamId, ndmpContextsBre.streamId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupType, bkpContextId, breContextId, createTime, envVariables, id, results, snapName, status, streamId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NdmpContextsBre {\n");
    
    sb.append("    backupType: ").append(toIndentedString(backupType)).append("\n");
    sb.append("    bkpContextId: ").append(toIndentedString(bkpContextId)).append("\n");
    sb.append("    breContextId: ").append(toIndentedString(breContextId)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    envVariables: ").append(toIndentedString(envVariables)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    snapName: ").append(toIndentedString(snapName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    streamId: ").append(toIndentedString(streamId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

