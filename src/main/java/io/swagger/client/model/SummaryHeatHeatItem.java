/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * SummaryHeatHeatItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class SummaryHeatHeatItem {
  @SerializedName("class_name")
  private String className = null;

  @SerializedName("event_name")
  private String eventName = null;

  @SerializedName("event_type")
  private Integer eventType = null;

  @SerializedName("lin")
  private String lin = null;

  @SerializedName("node")
  private Integer node = null;

  @SerializedName("operation_rate")
  private BigDecimal operationRate = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("time")
  private Integer time = null;

  public SummaryHeatHeatItem className(String className) {
    this.className = className;
    return this;
  }

   /**
   * The class of operation
   * @return className
  **/
  @ApiModelProperty(required = true, value = "The class of operation")
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }

  public SummaryHeatHeatItem eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * The type of event
   * @return eventName
  **/
  @ApiModelProperty(required = true, value = "The type of event")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public SummaryHeatHeatItem eventType(Integer eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * The event type id
   * @return eventType
  **/
  @ApiModelProperty(value = "The event type id")
  public Integer getEventType() {
    return eventType;
  }

  public void setEventType(Integer eventType) {
    this.eventType = eventType;
  }

  public SummaryHeatHeatItem lin(String lin) {
    this.lin = lin;
    return this;
  }

   /**
   * Logical inode (LIN)
   * @return lin
  **/
  @ApiModelProperty(value = "Logical inode (LIN)")
  public String getLin() {
    return lin;
  }

  public void setLin(String lin) {
    this.lin = lin;
  }

  public SummaryHeatHeatItem node(Integer node) {
    this.node = node;
    return this;
  }

   /**
   * The node where this event occurred.
   * @return node
  **/
  @ApiModelProperty(value = "The node where this event occurred.")
  public Integer getNode() {
    return node;
  }

  public void setNode(Integer node) {
    this.node = node;
  }

  public SummaryHeatHeatItem operationRate(BigDecimal operationRate) {
    this.operationRate = operationRate;
    return this;
  }

   /**
   * Approximate operations per second for this lin.
   * @return operationRate
  **/
  @ApiModelProperty(required = true, value = "Approximate operations per second for this lin.")
  public BigDecimal getOperationRate() {
    return operationRate;
  }

  public void setOperationRate(BigDecimal operationRate) {
    this.operationRate = operationRate;
  }

  public SummaryHeatHeatItem path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Canonical LIN path if known
   * @return path
  **/
  @ApiModelProperty(required = true, value = "Canonical LIN path if known")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public SummaryHeatHeatItem time(Integer time) {
    this.time = time;
    return this;
  }

   /**
   * Unix Epoch time in seconds of the request.
   * @return time
  **/
  @ApiModelProperty(required = true, value = "Unix Epoch time in seconds of the request.")
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SummaryHeatHeatItem summaryHeatHeatItem = (SummaryHeatHeatItem) o;
    return Objects.equals(this.className, summaryHeatHeatItem.className) &&
        Objects.equals(this.eventName, summaryHeatHeatItem.eventName) &&
        Objects.equals(this.eventType, summaryHeatHeatItem.eventType) &&
        Objects.equals(this.lin, summaryHeatHeatItem.lin) &&
        Objects.equals(this.node, summaryHeatHeatItem.node) &&
        Objects.equals(this.operationRate, summaryHeatHeatItem.operationRate) &&
        Objects.equals(this.path, summaryHeatHeatItem.path) &&
        Objects.equals(this.time, summaryHeatHeatItem.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(className, eventName, eventType, lin, node, operationRate, path, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SummaryHeatHeatItem {\n");
    
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    lin: ").append(toIndentedString(lin)).append("\n");
    sb.append("    node: ").append(toIndentedString(node)).append("\n");
    sb.append("    operationRate: ").append(toIndentedString(operationRate)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

