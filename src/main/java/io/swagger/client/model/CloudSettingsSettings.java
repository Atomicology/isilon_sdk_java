/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CloudSettingsSettingsCloudPolicyDefaults;
import io.swagger.client.model.CloudSettingsSettingsSleepTimeoutCloudGarbageCollection;
import java.io.IOException;

/**
 * CloudSettingsSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class CloudSettingsSettings {
  @SerializedName("cloud_policy_defaults")
  private CloudSettingsSettingsCloudPolicyDefaults cloudPolicyDefaults = null;

  @SerializedName("retry_coefficient_archive")
  private String retryCoefficientArchive = null;

  @SerializedName("retry_coefficient_cache_invalidation")
  private String retryCoefficientCacheInvalidation = null;

  @SerializedName("retry_coefficient_cloud_garbage_collection")
  private String retryCoefficientCloudGarbageCollection = null;

  @SerializedName("retry_coefficient_local_garbage_collection")
  private String retryCoefficientLocalGarbageCollection = null;

  @SerializedName("retry_coefficient_read_ahead")
  private String retryCoefficientReadAhead = null;

  @SerializedName("retry_coefficient_recall")
  private String retryCoefficientRecall = null;

  @SerializedName("retry_coefficient_writeback")
  private String retryCoefficientWriteback = null;

  @SerializedName("sleep_timeout_archive")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutArchive = null;

  @SerializedName("sleep_timeout_cache_invalidation")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCacheInvalidation = null;

  @SerializedName("sleep_timeout_cloud_garbage_collection")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCloudGarbageCollection = null;

  @SerializedName("sleep_timeout_local_garbage_collection")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutLocalGarbageCollection = null;

  @SerializedName("sleep_timeout_read_ahead")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutReadAhead = null;

  @SerializedName("sleep_timeout_recall")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutRecall = null;

  @SerializedName("sleep_timeout_writeback")
  private CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutWriteback = null;

  public CloudSettingsSettings cloudPolicyDefaults(CloudSettingsSettingsCloudPolicyDefaults cloudPolicyDefaults) {
    this.cloudPolicyDefaults = cloudPolicyDefaults;
    return this;
  }

   /**
   * The default filepool policy values for cloudpools.
   * @return cloudPolicyDefaults
  **/
  @ApiModelProperty(value = "The default filepool policy values for cloudpools.")
  public CloudSettingsSettingsCloudPolicyDefaults getCloudPolicyDefaults() {
    return cloudPolicyDefaults;
  }

  public void setCloudPolicyDefaults(CloudSettingsSettingsCloudPolicyDefaults cloudPolicyDefaults) {
    this.cloudPolicyDefaults = cloudPolicyDefaults;
  }

  public CloudSettingsSettings retryCoefficientArchive(String retryCoefficientArchive) {
    this.retryCoefficientArchive = retryCoefficientArchive;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive archive attempts.
   * @return retryCoefficientArchive
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive archive attempts.")
  public String getRetryCoefficientArchive() {
    return retryCoefficientArchive;
  }

  public void setRetryCoefficientArchive(String retryCoefficientArchive) {
    this.retryCoefficientArchive = retryCoefficientArchive;
  }

  public CloudSettingsSettings retryCoefficientCacheInvalidation(String retryCoefficientCacheInvalidation) {
    this.retryCoefficientCacheInvalidation = retryCoefficientCacheInvalidation;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive cache invalidation attempts.
   * @return retryCoefficientCacheInvalidation
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive cache invalidation attempts.")
  public String getRetryCoefficientCacheInvalidation() {
    return retryCoefficientCacheInvalidation;
  }

  public void setRetryCoefficientCacheInvalidation(String retryCoefficientCacheInvalidation) {
    this.retryCoefficientCacheInvalidation = retryCoefficientCacheInvalidation;
  }

  public CloudSettingsSettings retryCoefficientCloudGarbageCollection(String retryCoefficientCloudGarbageCollection) {
    this.retryCoefficientCloudGarbageCollection = retryCoefficientCloudGarbageCollection;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive cloud garbage collection attempts.
   * @return retryCoefficientCloudGarbageCollection
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive cloud garbage collection attempts.")
  public String getRetryCoefficientCloudGarbageCollection() {
    return retryCoefficientCloudGarbageCollection;
  }

  public void setRetryCoefficientCloudGarbageCollection(String retryCoefficientCloudGarbageCollection) {
    this.retryCoefficientCloudGarbageCollection = retryCoefficientCloudGarbageCollection;
  }

  public CloudSettingsSettings retryCoefficientLocalGarbageCollection(String retryCoefficientLocalGarbageCollection) {
    this.retryCoefficientLocalGarbageCollection = retryCoefficientLocalGarbageCollection;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive local garbage collection attempts.
   * @return retryCoefficientLocalGarbageCollection
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive local garbage collection attempts.")
  public String getRetryCoefficientLocalGarbageCollection() {
    return retryCoefficientLocalGarbageCollection;
  }

  public void setRetryCoefficientLocalGarbageCollection(String retryCoefficientLocalGarbageCollection) {
    this.retryCoefficientLocalGarbageCollection = retryCoefficientLocalGarbageCollection;
  }

  public CloudSettingsSettings retryCoefficientReadAhead(String retryCoefficientReadAhead) {
    this.retryCoefficientReadAhead = retryCoefficientReadAhead;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive read ahead attempts.
   * @return retryCoefficientReadAhead
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive read ahead attempts.")
  public String getRetryCoefficientReadAhead() {
    return retryCoefficientReadAhead;
  }

  public void setRetryCoefficientReadAhead(String retryCoefficientReadAhead) {
    this.retryCoefficientReadAhead = retryCoefficientReadAhead;
  }

  public CloudSettingsSettings retryCoefficientRecall(String retryCoefficientRecall) {
    this.retryCoefficientRecall = retryCoefficientRecall;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive recall attempts.
   * @return retryCoefficientRecall
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive recall attempts.")
  public String getRetryCoefficientRecall() {
    return retryCoefficientRecall;
  }

  public void setRetryCoefficientRecall(String retryCoefficientRecall) {
    this.retryCoefficientRecall = retryCoefficientRecall;
  }

  public CloudSettingsSettings retryCoefficientWriteback(String retryCoefficientWriteback) {
    this.retryCoefficientWriteback = retryCoefficientWriteback;
    return this;
  }

   /**
   * Coefficients in the quadratic function for determining the rest period between successive writeback attempts.
   * @return retryCoefficientWriteback
  **/
  @ApiModelProperty(value = "Coefficients in the quadratic function for determining the rest period between successive writeback attempts.")
  public String getRetryCoefficientWriteback() {
    return retryCoefficientWriteback;
  }

  public void setRetryCoefficientWriteback(String retryCoefficientWriteback) {
    this.retryCoefficientWriteback = retryCoefficientWriteback;
  }

  public CloudSettingsSettings sleepTimeoutArchive(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutArchive) {
    this.sleepTimeoutArchive = sleepTimeoutArchive;
    return this;
  }

   /**
   * Amount of time to wait between successive file archive operations.
   * @return sleepTimeoutArchive
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file archive operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutArchive() {
    return sleepTimeoutArchive;
  }

  public void setSleepTimeoutArchive(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutArchive) {
    this.sleepTimeoutArchive = sleepTimeoutArchive;
  }

  public CloudSettingsSettings sleepTimeoutCacheInvalidation(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCacheInvalidation) {
    this.sleepTimeoutCacheInvalidation = sleepTimeoutCacheInvalidation;
    return this;
  }

   /**
   * Amount of time to wait between successive file cache_invalidation operations.
   * @return sleepTimeoutCacheInvalidation
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file cache_invalidation operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutCacheInvalidation() {
    return sleepTimeoutCacheInvalidation;
  }

  public void setSleepTimeoutCacheInvalidation(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCacheInvalidation) {
    this.sleepTimeoutCacheInvalidation = sleepTimeoutCacheInvalidation;
  }

  public CloudSettingsSettings sleepTimeoutCloudGarbageCollection(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCloudGarbageCollection) {
    this.sleepTimeoutCloudGarbageCollection = sleepTimeoutCloudGarbageCollection;
    return this;
  }

   /**
   * Amount of time to wait between successive file cloud garbage collection operations.
   * @return sleepTimeoutCloudGarbageCollection
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file cloud garbage collection operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutCloudGarbageCollection() {
    return sleepTimeoutCloudGarbageCollection;
  }

  public void setSleepTimeoutCloudGarbageCollection(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutCloudGarbageCollection) {
    this.sleepTimeoutCloudGarbageCollection = sleepTimeoutCloudGarbageCollection;
  }

  public CloudSettingsSettings sleepTimeoutLocalGarbageCollection(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutLocalGarbageCollection) {
    this.sleepTimeoutLocalGarbageCollection = sleepTimeoutLocalGarbageCollection;
    return this;
  }

   /**
   * Amount of time to wait between successive file local garbage collection operations.
   * @return sleepTimeoutLocalGarbageCollection
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file local garbage collection operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutLocalGarbageCollection() {
    return sleepTimeoutLocalGarbageCollection;
  }

  public void setSleepTimeoutLocalGarbageCollection(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutLocalGarbageCollection) {
    this.sleepTimeoutLocalGarbageCollection = sleepTimeoutLocalGarbageCollection;
  }

  public CloudSettingsSettings sleepTimeoutReadAhead(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutReadAhead) {
    this.sleepTimeoutReadAhead = sleepTimeoutReadAhead;
    return this;
  }

   /**
   * Amount of time to wait between successive file read ahead operations.
   * @return sleepTimeoutReadAhead
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file read ahead operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutReadAhead() {
    return sleepTimeoutReadAhead;
  }

  public void setSleepTimeoutReadAhead(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutReadAhead) {
    this.sleepTimeoutReadAhead = sleepTimeoutReadAhead;
  }

  public CloudSettingsSettings sleepTimeoutRecall(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutRecall) {
    this.sleepTimeoutRecall = sleepTimeoutRecall;
    return this;
  }

   /**
   * Amount of time to wait between successive file recall operations.
   * @return sleepTimeoutRecall
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file recall operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutRecall() {
    return sleepTimeoutRecall;
  }

  public void setSleepTimeoutRecall(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutRecall) {
    this.sleepTimeoutRecall = sleepTimeoutRecall;
  }

  public CloudSettingsSettings sleepTimeoutWriteback(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutWriteback) {
    this.sleepTimeoutWriteback = sleepTimeoutWriteback;
    return this;
  }

   /**
   * Amount of time to wait between successive file writeback operations.
   * @return sleepTimeoutWriteback
  **/
  @ApiModelProperty(value = "Amount of time to wait between successive file writeback operations.")
  public CloudSettingsSettingsSleepTimeoutCloudGarbageCollection getSleepTimeoutWriteback() {
    return sleepTimeoutWriteback;
  }

  public void setSleepTimeoutWriteback(CloudSettingsSettingsSleepTimeoutCloudGarbageCollection sleepTimeoutWriteback) {
    this.sleepTimeoutWriteback = sleepTimeoutWriteback;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudSettingsSettings cloudSettingsSettings = (CloudSettingsSettings) o;
    return Objects.equals(this.cloudPolicyDefaults, cloudSettingsSettings.cloudPolicyDefaults) &&
        Objects.equals(this.retryCoefficientArchive, cloudSettingsSettings.retryCoefficientArchive) &&
        Objects.equals(this.retryCoefficientCacheInvalidation, cloudSettingsSettings.retryCoefficientCacheInvalidation) &&
        Objects.equals(this.retryCoefficientCloudGarbageCollection, cloudSettingsSettings.retryCoefficientCloudGarbageCollection) &&
        Objects.equals(this.retryCoefficientLocalGarbageCollection, cloudSettingsSettings.retryCoefficientLocalGarbageCollection) &&
        Objects.equals(this.retryCoefficientReadAhead, cloudSettingsSettings.retryCoefficientReadAhead) &&
        Objects.equals(this.retryCoefficientRecall, cloudSettingsSettings.retryCoefficientRecall) &&
        Objects.equals(this.retryCoefficientWriteback, cloudSettingsSettings.retryCoefficientWriteback) &&
        Objects.equals(this.sleepTimeoutArchive, cloudSettingsSettings.sleepTimeoutArchive) &&
        Objects.equals(this.sleepTimeoutCacheInvalidation, cloudSettingsSettings.sleepTimeoutCacheInvalidation) &&
        Objects.equals(this.sleepTimeoutCloudGarbageCollection, cloudSettingsSettings.sleepTimeoutCloudGarbageCollection) &&
        Objects.equals(this.sleepTimeoutLocalGarbageCollection, cloudSettingsSettings.sleepTimeoutLocalGarbageCollection) &&
        Objects.equals(this.sleepTimeoutReadAhead, cloudSettingsSettings.sleepTimeoutReadAhead) &&
        Objects.equals(this.sleepTimeoutRecall, cloudSettingsSettings.sleepTimeoutRecall) &&
        Objects.equals(this.sleepTimeoutWriteback, cloudSettingsSettings.sleepTimeoutWriteback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudPolicyDefaults, retryCoefficientArchive, retryCoefficientCacheInvalidation, retryCoefficientCloudGarbageCollection, retryCoefficientLocalGarbageCollection, retryCoefficientReadAhead, retryCoefficientRecall, retryCoefficientWriteback, sleepTimeoutArchive, sleepTimeoutCacheInvalidation, sleepTimeoutCloudGarbageCollection, sleepTimeoutLocalGarbageCollection, sleepTimeoutReadAhead, sleepTimeoutRecall, sleepTimeoutWriteback);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudSettingsSettings {\n");
    
    sb.append("    cloudPolicyDefaults: ").append(toIndentedString(cloudPolicyDefaults)).append("\n");
    sb.append("    retryCoefficientArchive: ").append(toIndentedString(retryCoefficientArchive)).append("\n");
    sb.append("    retryCoefficientCacheInvalidation: ").append(toIndentedString(retryCoefficientCacheInvalidation)).append("\n");
    sb.append("    retryCoefficientCloudGarbageCollection: ").append(toIndentedString(retryCoefficientCloudGarbageCollection)).append("\n");
    sb.append("    retryCoefficientLocalGarbageCollection: ").append(toIndentedString(retryCoefficientLocalGarbageCollection)).append("\n");
    sb.append("    retryCoefficientReadAhead: ").append(toIndentedString(retryCoefficientReadAhead)).append("\n");
    sb.append("    retryCoefficientRecall: ").append(toIndentedString(retryCoefficientRecall)).append("\n");
    sb.append("    retryCoefficientWriteback: ").append(toIndentedString(retryCoefficientWriteback)).append("\n");
    sb.append("    sleepTimeoutArchive: ").append(toIndentedString(sleepTimeoutArchive)).append("\n");
    sb.append("    sleepTimeoutCacheInvalidation: ").append(toIndentedString(sleepTimeoutCacheInvalidation)).append("\n");
    sb.append("    sleepTimeoutCloudGarbageCollection: ").append(toIndentedString(sleepTimeoutCloudGarbageCollection)).append("\n");
    sb.append("    sleepTimeoutLocalGarbageCollection: ").append(toIndentedString(sleepTimeoutLocalGarbageCollection)).append("\n");
    sb.append("    sleepTimeoutReadAhead: ").append(toIndentedString(sleepTimeoutReadAhead)).append("\n");
    sb.append("    sleepTimeoutRecall: ").append(toIndentedString(sleepTimeoutRecall)).append("\n");
    sb.append("    sleepTimeoutWriteback: ").append(toIndentedString(sleepTimeoutWriteback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

