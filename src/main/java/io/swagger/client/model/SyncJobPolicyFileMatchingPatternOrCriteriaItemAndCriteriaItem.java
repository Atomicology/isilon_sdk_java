/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem {
  @SerializedName("attribute_exists")
  private Boolean attributeExists = null;

  @SerializedName("case_sensitive")
  private Boolean caseSensitive = null;

  @SerializedName("field")
  private String field = null;

  @SerializedName("operator")
  private String operator = null;

  /**
   * The type of this criterion, that is, which file attribute to match on.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NAME("name"),
    
    PATH("path"),
    
    ACCESSED_TIME("accessed_time"),
    
    ACCESSED_BEFORE("accessed_before"),
    
    ACCESSED_AFTER("accessed_after"),
    
    BIRTH_TIME("birth_time"),
    
    BIRTH_BEFORE("birth_before"),
    
    BIRTH_AFTER("birth_after"),
    
    CHANGED_TIME("changed_time"),
    
    CHANGED_BEFORE("changed_before"),
    
    CHANGED_AFTER("changed_after"),
    
    SIZE("size"),
    
    FILE_TYPE("file_type"),
    
    POSIX_REGEX_NAME("posix_regex_name"),
    
    USER_NAME("user_name"),
    
    USER_ID("user_id"),
    
    GROUP_NAME("group_name"),
    
    GROUP_ID("group_id"),
    
    NO_USER("no_user"),
    
    NO_GROUP("no_group");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("whole_word")
  private Boolean wholeWord = null;

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem attributeExists(Boolean attributeExists) {
    this.attributeExists = attributeExists;
    return this;
  }

   /**
   * For \&quot;custom_attribute\&quot; type criteria.  The file will match as long as the attribute named by \&quot;field\&quot; exists.  Default is true.
   * @return attributeExists
  **/
  @ApiModelProperty(value = "For \"custom_attribute\" type criteria.  The file will match as long as the attribute named by \"field\" exists.  Default is true.")
  public Boolean isAttributeExists() {
    return attributeExists;
  }

  public void setAttributeExists(Boolean attributeExists) {
    this.attributeExists = attributeExists;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem caseSensitive(Boolean caseSensitive) {
    this.caseSensitive = caseSensitive;
    return this;
  }

   /**
   * If true, the value comparison will be case sensitive.  Default is true.
   * @return caseSensitive
  **/
  @ApiModelProperty(value = "If true, the value comparison will be case sensitive.  Default is true.")
  public Boolean isCaseSensitive() {
    return caseSensitive;
  }

  public void setCaseSensitive(Boolean caseSensitive) {
    this.caseSensitive = caseSensitive;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem field(String field) {
    this.field = field;
    return this;
  }

   /**
   * The name of the file attribute to match on (only required if this is a custom_attribute type criterion).  Default is an empty string \&quot;\&quot;.
   * @return field
  **/
  @ApiModelProperty(value = "The name of the file attribute to match on (only required if this is a custom_attribute type criterion).  Default is an empty string \"\".")
  public String getField() {
    return field;
  }

  public void setField(String field) {
    this.field = field;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * How to compare the specified attribute of each file to the specified value.
   * @return operator
  **/
  @ApiModelProperty(value = "How to compare the specified attribute of each file to the specified value.")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of this criterion, that is, which file attribute to match on.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of this criterion, that is, which file attribute to match on.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value to compare the specified attribute of each file to.
   * @return value
  **/
  @ApiModelProperty(value = "The value to compare the specified attribute of each file to.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem wholeWord(Boolean wholeWord) {
    this.wholeWord = wholeWord;
    return this;
  }

   /**
   * If true, the attribute must match the entire word.  Default is true.
   * @return wholeWord
  **/
  @ApiModelProperty(value = "If true, the attribute must match the entire word.  Default is true.")
  public Boolean isWholeWord() {
    return wholeWord;
  }

  public void setWholeWord(Boolean wholeWord) {
    this.wholeWord = wholeWord;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem = (SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem) o;
    return Objects.equals(this.attributeExists, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.attributeExists) &&
        Objects.equals(this.caseSensitive, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.caseSensitive) &&
        Objects.equals(this.field, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.field) &&
        Objects.equals(this.operator, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.operator) &&
        Objects.equals(this.type, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.type) &&
        Objects.equals(this.value, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.value) &&
        Objects.equals(this.wholeWord, syncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem.wholeWord);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeExists, caseSensitive, field, operator, type, value, wholeWord);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem {\n");
    
    sb.append("    attributeExists: ").append(toIndentedString(attributeExists)).append("\n");
    sb.append("    caseSensitive: ").append(toIndentedString(caseSensitive)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    wholeWord: ").append(toIndentedString(wholeWord)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

