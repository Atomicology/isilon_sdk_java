/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeStateNodeServicelight;
import io.swagger.client.model.NodeStateReadonlyExtended;
import io.swagger.client.model.NodeStateSmartfailExtended;
import java.io.IOException;

/**
 * NodeStateNode
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class NodeStateNode {
  @SerializedName("error")
  private String error = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("lnn")
  private Integer lnn = null;

  @SerializedName("readonly")
  private NodeStateReadonlyExtended readonly = null;

  @SerializedName("servicelight")
  private NodeStateNodeServicelight servicelight = null;

  @SerializedName("smartfail")
  private NodeStateSmartfailExtended smartfail = null;

  @SerializedName("status")
  private Integer status = null;

  public NodeStateNode error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Error message, if the HTTP status returned from this node was not 200.
   * @return error
  **/
  @ApiModelProperty(value = "Error message, if the HTTP status returned from this node was not 200.")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public NodeStateNode id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Node ID of the node reporting this information.
   * minimum: 0
   * maximum: 4294967295
   * @return id
  **/
  @ApiModelProperty(value = "Node ID of the node reporting this information.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public NodeStateNode lnn(Integer lnn) {
    this.lnn = lnn;
    return this;
  }

   /**
   * Logical node number of the node reporting this information.
   * minimum: 0
   * maximum: 4294967295
   * @return lnn
  **/
  @ApiModelProperty(value = "Logical node number of the node reporting this information.")
  public Integer getLnn() {
    return lnn;
  }

  public void setLnn(Integer lnn) {
    this.lnn = lnn;
  }

  public NodeStateNode readonly(NodeStateReadonlyExtended readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Node readonly state.
   * @return readonly
  **/
  @ApiModelProperty(value = "Node readonly state.")
  public NodeStateReadonlyExtended getReadonly() {
    return readonly;
  }

  public void setReadonly(NodeStateReadonlyExtended readonly) {
    this.readonly = readonly;
  }

  public NodeStateNode servicelight(NodeStateNodeServicelight servicelight) {
    this.servicelight = servicelight;
    return this;
  }

   /**
   * Node service light state.
   * @return servicelight
  **/
  @ApiModelProperty(value = "Node service light state.")
  public NodeStateNodeServicelight getServicelight() {
    return servicelight;
  }

  public void setServicelight(NodeStateNodeServicelight servicelight) {
    this.servicelight = servicelight;
  }

  public NodeStateNode smartfail(NodeStateSmartfailExtended smartfail) {
    this.smartfail = smartfail;
    return this;
  }

   /**
   * Node smartfail state.
   * @return smartfail
  **/
  @ApiModelProperty(value = "Node smartfail state.")
  public NodeStateSmartfailExtended getSmartfail() {
    return smartfail;
  }

  public void setSmartfail(NodeStateSmartfailExtended smartfail) {
    this.smartfail = smartfail;
  }

  public NodeStateNode status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the HTTP response from this node if not 200.  If 200, this field does not appear.
   * minimum: 0
   * maximum: 4294967295
   * @return status
  **/
  @ApiModelProperty(value = "Status of the HTTP response from this node if not 200.  If 200, this field does not appear.")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeStateNode nodeStateNode = (NodeStateNode) o;
    return Objects.equals(this.error, nodeStateNode.error) &&
        Objects.equals(this.id, nodeStateNode.id) &&
        Objects.equals(this.lnn, nodeStateNode.lnn) &&
        Objects.equals(this.readonly, nodeStateNode.readonly) &&
        Objects.equals(this.servicelight, nodeStateNode.servicelight) &&
        Objects.equals(this.smartfail, nodeStateNode.smartfail) &&
        Objects.equals(this.status, nodeStateNode.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, id, lnn, readonly, servicelight, smartfail, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeStateNode {\n");
    
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lnn: ").append(toIndentedString(lnn)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    servicelight: ").append(toIndentedString(servicelight)).append("\n");
    sb.append("    smartfail: ").append(toIndentedString(smartfail)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

