/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The list of supported shells.
 */
@ApiModel(description = "The list of supported shells.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class AuthShells {
  @SerializedName("shells")
  private List<String> shells = null;

  public AuthShells shells(List<String> shells) {
    this.shells = shells;
    return this;
  }

  public AuthShells addShellsItem(String shellsItem) {
    if (this.shells == null) {
      this.shells = new ArrayList<String>();
    }
    this.shells.add(shellsItem);
    return this;
  }

   /**
   * Get shells
   * @return shells
  **/
  @ApiModelProperty(value = "")
  public List<String> getShells() {
    return shells;
  }

  public void setShells(List<String> shells) {
    this.shells = shells;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthShells authShells = (AuthShells) o;
    return Objects.equals(this.shells, authShells.shells);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shells);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthShells {\n");
    
    sb.append("    shells: ").append(toIndentedString(shells)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

