/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AuthAccessAccessItemFileGroup;
import java.io.IOException;

/**
 * MappingIdentityTargetCreateParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class MappingIdentityTargetCreateParams {
  @SerializedName("on_disk")
  private Boolean onDisk = null;

  @SerializedName("target")
  private AuthAccessAccessItemFileGroup target = null;

  /**
   * Origin of identity mapping.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AUTO("auto"),
    
    EXTERNAL("external"),
    
    MANUAL("manual");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public MappingIdentityTargetCreateParams onDisk(Boolean onDisk) {
    this.onDisk = onDisk;
    return this;
  }

   /**
   * Identity is preferred on-disk.
   * @return onDisk
  **/
  @ApiModelProperty(value = "Identity is preferred on-disk.")
  public Boolean isOnDisk() {
    return onDisk;
  }

  public void setOnDisk(Boolean onDisk) {
    this.onDisk = onDisk;
  }

  public MappingIdentityTargetCreateParams target(AuthAccessAccessItemFileGroup target) {
    this.target = target;
    return this;
  }

   /**
   * Specifies properties for a persona, which consists of either a &#39;type&#39; and a &#39;name&#39; or an &#39;ID&#39;.
   * @return target
  **/
  @ApiModelProperty(required = true, value = "Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.")
  public AuthAccessAccessItemFileGroup getTarget() {
    return target;
  }

  public void setTarget(AuthAccessAccessItemFileGroup target) {
    this.target = target;
  }

  public MappingIdentityTargetCreateParams type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Origin of identity mapping.
   * @return type
  **/
  @ApiModelProperty(value = "Origin of identity mapping.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MappingIdentityTargetCreateParams mappingIdentityTargetCreateParams = (MappingIdentityTargetCreateParams) o;
    return Objects.equals(this.onDisk, mappingIdentityTargetCreateParams.onDisk) &&
        Objects.equals(this.target, mappingIdentityTargetCreateParams.target) &&
        Objects.equals(this.type, mappingIdentityTargetCreateParams.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(onDisk, target, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MappingIdentityTargetCreateParams {\n");
    
    sb.append("    onDisk: ").append(toIndentedString(onDisk)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

