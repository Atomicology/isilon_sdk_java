/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CloudAccount;
import java.io.IOException;

/**
 * CloudAccountExtended
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class CloudAccountExtended {
  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("account_username")
  private String accountUsername = null;

  @SerializedName("birth_cluster_id")
  private String birthClusterId = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("proxy")
  private String proxy = null;

  @SerializedName("skip_account_check")
  private Boolean skipAccountCheck = null;

  @SerializedName("skip_ssl_validation")
  private Boolean skipSslValidation = null;

  @SerializedName("storage_region")
  private String storageRegion = null;

  @SerializedName("telemetry_bucket")
  private String telemetryBucket = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("bucket")
  private String bucket = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("metadata_bucket")
  private String metadataBucket = null;

  @SerializedName("pool")
  private String pool = null;

  /**
   * Indicates whether this account is in a good state (\&quot;OK\&quot;), disabled (\&quot;disabled\&quot;) or inaccessible via the network (\&quot;unreachable\&quot;)
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    OK("OK"),
    
    DISABLED("disabled"),
    
    UNREACHABLE("unreachable");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("state_details")
  private String stateDetails = null;

  /**
   * The type of cloud protocol required.  E.g., \&quot;isilon\&quot; for EMC Isilon, \&quot;ecs\&quot; for EMC ECS Appliance, \&quot;virtustream\&quot; for Virtustream Storage Cloud, \&quot;azure\&quot; for Microsoft Azure and \&quot;s3\&quot; for Amazon S3
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ISILON("isilon"),
    
    ECS("ecs"),
    
    VIRTUSTREAM("virtustream"),
    
    AZURE("azure"),
    
    S3("s3"),
    
    RAN("ran"),
    
    ECS2("ecs2");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public CloudAccountExtended accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * (S3 only) The user id of the S3 account
   * @return accountId
  **/
  @ApiModelProperty(value = "(S3 only) The user id of the S3 account")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CloudAccountExtended accountUsername(String accountUsername) {
    this.accountUsername = accountUsername;
    return this;
  }

   /**
   * The username required to authenticate against the cloud service
   * @return accountUsername
  **/
  @ApiModelProperty(value = "The username required to authenticate against the cloud service")
  public String getAccountUsername() {
    return accountUsername;
  }

  public void setAccountUsername(String accountUsername) {
    this.accountUsername = accountUsername;
  }

  public CloudAccountExtended birthClusterId(String birthClusterId) {
    this.birthClusterId = birthClusterId;
    return this;
  }

   /**
   * The guid of the cluster where this account was created
   * @return birthClusterId
  **/
  @ApiModelProperty(value = "The guid of the cluster where this account was created")
  public String getBirthClusterId() {
    return birthClusterId;
  }

  public void setBirthClusterId(String birthClusterId) {
    this.birthClusterId = birthClusterId;
  }

  public CloudAccountExtended enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether this account is explicitly enabled or disabled by a user
   * @return enabled
  **/
  @ApiModelProperty(value = "Whether this account is explicitly enabled or disabled by a user")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public CloudAccountExtended key(String key) {
    this.key = key;
    return this;
  }

   /**
   * A valid authentication key for connecting to the cloud
   * @return key
  **/
  @ApiModelProperty(value = "A valid authentication key for connecting to the cloud")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public CloudAccountExtended name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A unique name for this account
   * @return name
  **/
  @ApiModelProperty(value = "A unique name for this account")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CloudAccountExtended proxy(String proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * The id or name of a proxy to be used by this account
   * @return proxy
  **/
  @ApiModelProperty(value = "The id or name of a proxy to be used by this account")
  public String getProxy() {
    return proxy;
  }

  public void setProxy(String proxy) {
    this.proxy = proxy;
  }

  public CloudAccountExtended skipAccountCheck(Boolean skipAccountCheck) {
    this.skipAccountCheck = skipAccountCheck;
    return this;
  }

   /**
   * (Not recommended) Indicates whether to skip validation that the cloud account is still accessible
   * @return skipAccountCheck
  **/
  @ApiModelProperty(value = "(Not recommended) Indicates whether to skip validation that the cloud account is still accessible")
  public Boolean isSkipAccountCheck() {
    return skipAccountCheck;
  }

  public void setSkipAccountCheck(Boolean skipAccountCheck) {
    this.skipAccountCheck = skipAccountCheck;
  }

  public CloudAccountExtended skipSslValidation(Boolean skipSslValidation) {
    this.skipSslValidation = skipSslValidation;
    return this;
  }

   /**
   * Indicates whether to skip SSL certificate validation when connecting to the cloud
   * @return skipSslValidation
  **/
  @ApiModelProperty(value = "Indicates whether to skip SSL certificate validation when connecting to the cloud")
  public Boolean isSkipSslValidation() {
    return skipSslValidation;
  }

  public void setSkipSslValidation(Boolean skipSslValidation) {
    this.skipSslValidation = skipSslValidation;
  }

  public CloudAccountExtended storageRegion(String storageRegion) {
    this.storageRegion = storageRegion;
    return this;
  }

   /**
   * (S3 only) An appropriate region for the S3 account.  For example, faster access times may be gained by referencing a nearby region
   * @return storageRegion
  **/
  @ApiModelProperty(value = "(S3 only) An appropriate region for the S3 account.  For example, faster access times may be gained by referencing a nearby region")
  public String getStorageRegion() {
    return storageRegion;
  }

  public void setStorageRegion(String storageRegion) {
    this.storageRegion = storageRegion;
  }

  public CloudAccountExtended telemetryBucket(String telemetryBucket) {
    this.telemetryBucket = telemetryBucket;
    return this;
  }

   /**
   * (S3 only) The name of the bucket into which generated metrics reports are placed by the cloud service provider
   * @return telemetryBucket
  **/
  @ApiModelProperty(value = "(S3 only) The name of the bucket into which generated metrics reports are placed by the cloud service provider")
  public String getTelemetryBucket() {
    return telemetryBucket;
  }

  public void setTelemetryBucket(String telemetryBucket) {
    this.telemetryBucket = telemetryBucket;
  }

  public CloudAccountExtended uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * A valid URI pointing to the location of the cloud storage
   * @return uri
  **/
  @ApiModelProperty(value = "A valid URI pointing to the location of the cloud storage")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public CloudAccountExtended bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

   /**
   * The machine generated name of the account bucket to store data
   * @return bucket
  **/
  @ApiModelProperty(value = "The machine generated name of the account bucket to store data")
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }

  public CloudAccountExtended id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A globally unique name for this account
   * @return id
  **/
  @ApiModelProperty(value = "A globally unique name for this account")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CloudAccountExtended metadataBucket(String metadataBucket) {
    this.metadataBucket = metadataBucket;
    return this;
  }

   /**
   * The machine generated name of the account bucket to store metadata
   * @return metadataBucket
  **/
  @ApiModelProperty(value = "The machine generated name of the account bucket to store metadata")
  public String getMetadataBucket() {
    return metadataBucket;
  }

  public void setMetadataBucket(String metadataBucket) {
    this.metadataBucket = metadataBucket;
  }

  public CloudAccountExtended pool(String pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Name of the pool referencing this account.  Empty if none.
   * @return pool
  **/
  @ApiModelProperty(value = "Name of the pool referencing this account.  Empty if none.")
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }

  public CloudAccountExtended state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Indicates whether this account is in a good state (\&quot;OK\&quot;), disabled (\&quot;disabled\&quot;) or inaccessible via the network (\&quot;unreachable\&quot;)
   * @return state
  **/
  @ApiModelProperty(value = "Indicates whether this account is in a good state (\"OK\"), disabled (\"disabled\") or inaccessible via the network (\"unreachable\")")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public CloudAccountExtended stateDetails(String stateDetails) {
    this.stateDetails = stateDetails;
    return this;
  }

   /**
   * Gives further information to describe the state of this account
   * @return stateDetails
  **/
  @ApiModelProperty(value = "Gives further information to describe the state of this account")
  public String getStateDetails() {
    return stateDetails;
  }

  public void setStateDetails(String stateDetails) {
    this.stateDetails = stateDetails;
  }

  public CloudAccountExtended type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of cloud protocol required.  E.g., \&quot;isilon\&quot; for EMC Isilon, \&quot;ecs\&quot; for EMC ECS Appliance, \&quot;virtustream\&quot; for Virtustream Storage Cloud, \&quot;azure\&quot; for Microsoft Azure and \&quot;s3\&quot; for Amazon S3
   * @return type
  **/
  @ApiModelProperty(value = "The type of cloud protocol required.  E.g., \"isilon\" for EMC Isilon, \"ecs\" for EMC ECS Appliance, \"virtustream\" for Virtustream Storage Cloud, \"azure\" for Microsoft Azure and \"s3\" for Amazon S3")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudAccountExtended cloudAccountExtended = (CloudAccountExtended) o;
    return Objects.equals(this.accountId, cloudAccountExtended.accountId) &&
        Objects.equals(this.accountUsername, cloudAccountExtended.accountUsername) &&
        Objects.equals(this.birthClusterId, cloudAccountExtended.birthClusterId) &&
        Objects.equals(this.enabled, cloudAccountExtended.enabled) &&
        Objects.equals(this.key, cloudAccountExtended.key) &&
        Objects.equals(this.name, cloudAccountExtended.name) &&
        Objects.equals(this.proxy, cloudAccountExtended.proxy) &&
        Objects.equals(this.skipAccountCheck, cloudAccountExtended.skipAccountCheck) &&
        Objects.equals(this.skipSslValidation, cloudAccountExtended.skipSslValidation) &&
        Objects.equals(this.storageRegion, cloudAccountExtended.storageRegion) &&
        Objects.equals(this.telemetryBucket, cloudAccountExtended.telemetryBucket) &&
        Objects.equals(this.uri, cloudAccountExtended.uri) &&
        Objects.equals(this.bucket, cloudAccountExtended.bucket) &&
        Objects.equals(this.id, cloudAccountExtended.id) &&
        Objects.equals(this.metadataBucket, cloudAccountExtended.metadataBucket) &&
        Objects.equals(this.pool, cloudAccountExtended.pool) &&
        Objects.equals(this.state, cloudAccountExtended.state) &&
        Objects.equals(this.stateDetails, cloudAccountExtended.stateDetails) &&
        Objects.equals(this.type, cloudAccountExtended.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountUsername, birthClusterId, enabled, key, name, proxy, skipAccountCheck, skipSslValidation, storageRegion, telemetryBucket, uri, bucket, id, metadataBucket, pool, state, stateDetails, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudAccountExtended {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountUsername: ").append(toIndentedString(accountUsername)).append("\n");
    sb.append("    birthClusterId: ").append(toIndentedString(birthClusterId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    skipAccountCheck: ").append(toIndentedString(skipAccountCheck)).append("\n");
    sb.append("    skipSslValidation: ").append(toIndentedString(skipSslValidation)).append("\n");
    sb.append("    storageRegion: ").append(toIndentedString(storageRegion)).append("\n");
    sb.append("    telemetryBucket: ").append(toIndentedString(telemetryBucket)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadataBucket: ").append(toIndentedString(metadataBucket)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateDetails: ").append(toIndentedString(stateDetails)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

