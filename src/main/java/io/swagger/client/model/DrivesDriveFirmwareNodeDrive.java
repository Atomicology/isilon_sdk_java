/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DrivesDriveFirmwareNodeDrive
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class DrivesDriveFirmwareNodeDrive {
  @SerializedName("baynum")
  private Integer baynum = null;

  @SerializedName("current_firmware")
  private String currentFirmware = null;

  @SerializedName("desired_firmware")
  private String desiredFirmware = null;

  @SerializedName("devname")
  private String devname = null;

  @SerializedName("lnum")
  private Integer lnum = null;

  @SerializedName("locnstr")
  private String locnstr = null;

  @SerializedName("model")
  private String model = null;

  public DrivesDriveFirmwareNodeDrive baynum(Integer baynum) {
    this.baynum = baynum;
    return this;
  }

   /**
   * Numerical representation of this drive&#39;s bay.
   * @return baynum
  **/
  @ApiModelProperty(value = "Numerical representation of this drive's bay.")
  public Integer getBaynum() {
    return baynum;
  }

  public void setBaynum(Integer baynum) {
    this.baynum = baynum;
  }

  public DrivesDriveFirmwareNodeDrive currentFirmware(String currentFirmware) {
    this.currentFirmware = currentFirmware;
    return this;
  }

   /**
   * This drive&#39;s current firmware revision
   * @return currentFirmware
  **/
  @ApiModelProperty(value = "This drive's current firmware revision")
  public String getCurrentFirmware() {
    return currentFirmware;
  }

  public void setCurrentFirmware(String currentFirmware) {
    this.currentFirmware = currentFirmware;
  }

  public DrivesDriveFirmwareNodeDrive desiredFirmware(String desiredFirmware) {
    this.desiredFirmware = desiredFirmware;
    return this;
  }

   /**
   * This drive&#39;s desired firmware revision.
   * @return desiredFirmware
  **/
  @ApiModelProperty(value = "This drive's desired firmware revision.")
  public String getDesiredFirmware() {
    return desiredFirmware;
  }

  public void setDesiredFirmware(String desiredFirmware) {
    this.desiredFirmware = desiredFirmware;
  }

  public DrivesDriveFirmwareNodeDrive devname(String devname) {
    this.devname = devname;
    return this;
  }

   /**
   * This drive&#39;s device name.
   * @return devname
  **/
  @ApiModelProperty(value = "This drive's device name.")
  public String getDevname() {
    return devname;
  }

  public void setDevname(String devname) {
    this.devname = devname;
  }

  public DrivesDriveFirmwareNodeDrive lnum(Integer lnum) {
    this.lnum = lnum;
    return this;
  }

   /**
   * This drive&#39;s logical drive number in IFS.
   * @return lnum
  **/
  @ApiModelProperty(value = "This drive's logical drive number in IFS.")
  public Integer getLnum() {
    return lnum;
  }

  public void setLnum(Integer lnum) {
    this.lnum = lnum;
  }

  public DrivesDriveFirmwareNodeDrive locnstr(String locnstr) {
    this.locnstr = locnstr;
    return this;
  }

   /**
   * String representation of this drive&#39;s physical location.
   * @return locnstr
  **/
  @ApiModelProperty(value = "String representation of this drive's physical location.")
  public String getLocnstr() {
    return locnstr;
  }

  public void setLocnstr(String locnstr) {
    this.locnstr = locnstr;
  }

  public DrivesDriveFirmwareNodeDrive model(String model) {
    this.model = model;
    return this;
  }

   /**
   * This drive&#39;s manufacturer and model.
   * @return model
  **/
  @ApiModelProperty(value = "This drive's manufacturer and model.")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DrivesDriveFirmwareNodeDrive drivesDriveFirmwareNodeDrive = (DrivesDriveFirmwareNodeDrive) o;
    return Objects.equals(this.baynum, drivesDriveFirmwareNodeDrive.baynum) &&
        Objects.equals(this.currentFirmware, drivesDriveFirmwareNodeDrive.currentFirmware) &&
        Objects.equals(this.desiredFirmware, drivesDriveFirmwareNodeDrive.desiredFirmware) &&
        Objects.equals(this.devname, drivesDriveFirmwareNodeDrive.devname) &&
        Objects.equals(this.lnum, drivesDriveFirmwareNodeDrive.lnum) &&
        Objects.equals(this.locnstr, drivesDriveFirmwareNodeDrive.locnstr) &&
        Objects.equals(this.model, drivesDriveFirmwareNodeDrive.model);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baynum, currentFirmware, desiredFirmware, devname, lnum, locnstr, model);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DrivesDriveFirmwareNodeDrive {\n");
    
    sb.append("    baynum: ").append(toIndentedString(baynum)).append("\n");
    sb.append("    currentFirmware: ").append(toIndentedString(currentFirmware)).append("\n");
    sb.append("    desiredFirmware: ").append(toIndentedString(desiredFirmware)).append("\n");
    sb.append("    devname: ").append(toIndentedString(devname)).append("\n");
    sb.append("    lnum: ").append(toIndentedString(lnum)).append("\n");
    sb.append("    locnstr: ").append(toIndentedString(locnstr)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

