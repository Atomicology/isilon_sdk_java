/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NodeSledsNodeSled
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class NodeSledsNodeSled {
  @SerializedName("is_removeable")
  private Boolean isRemoveable = null;

  @SerializedName("sled_letter")
  private String sledLetter = null;

  /**
   * The state of physical presence of a sled.
   */
  @JsonAdapter(SledStateEnum.Adapter.class)
  public enum SledStateEnum {
    PRESENT("Present"),
    
    ABSENT("Absent"),
    
    UNKNOWN("Unknown");

    private String value;

    SledStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SledStateEnum fromValue(String text) {
      for (SledStateEnum b : SledStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SledStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SledStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SledStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SledStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("sled_state")
  private SledStateEnum sledState = null;

  public NodeSledsNodeSled isRemoveable(Boolean isRemoveable) {
    this.isRemoveable = isRemoveable;
    return this;
  }

   /**
   * Boolean to indicate whether or not the sled is safe to remove.
   * @return isRemoveable
  **/
  @ApiModelProperty(required = true, value = "Boolean to indicate whether or not the sled is safe to remove.")
  public Boolean isIsRemoveable() {
    return isRemoveable;
  }

  public void setIsRemoveable(Boolean isRemoveable) {
    this.isRemoveable = isRemoveable;
  }

  public NodeSledsNodeSled sledLetter(String sledLetter) {
    this.sledLetter = sledLetter;
    return this;
  }

   /**
   * The sled letter which OneFS uses to refer to this sled in the node.
   * @return sledLetter
  **/
  @ApiModelProperty(required = true, value = "The sled letter which OneFS uses to refer to this sled in the node.")
  public String getSledLetter() {
    return sledLetter;
  }

  public void setSledLetter(String sledLetter) {
    this.sledLetter = sledLetter;
  }

  public NodeSledsNodeSled sledState(SledStateEnum sledState) {
    this.sledState = sledState;
    return this;
  }

   /**
   * The state of physical presence of a sled.
   * @return sledState
  **/
  @ApiModelProperty(required = true, value = "The state of physical presence of a sled.")
  public SledStateEnum getSledState() {
    return sledState;
  }

  public void setSledState(SledStateEnum sledState) {
    this.sledState = sledState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeSledsNodeSled nodeSledsNodeSled = (NodeSledsNodeSled) o;
    return Objects.equals(this.isRemoveable, nodeSledsNodeSled.isRemoveable) &&
        Objects.equals(this.sledLetter, nodeSledsNodeSled.sledLetter) &&
        Objects.equals(this.sledState, nodeSledsNodeSled.sledState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isRemoveable, sledLetter, sledState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeSledsNodeSled {\n");
    
    sb.append("    isRemoveable: ").append(toIndentedString(isRemoveable)).append("\n");
    sb.append("    sledLetter: ").append(toIndentedString(sledLetter)).append("\n");
    sb.append("    sledState: ").append(toIndentedString(sledState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

