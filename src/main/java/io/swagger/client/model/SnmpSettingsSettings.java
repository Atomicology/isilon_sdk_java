/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SnmpSettingsSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class SnmpSettingsSettings {
  @SerializedName("read_only_community")
  private String readOnlyCommunity = null;

  @SerializedName("service")
  private Boolean service = null;

  @SerializedName("snmp_v1_v2c_access")
  private Boolean snmpV1V2cAccess = null;

  @SerializedName("snmp_v3_access")
  private Boolean snmpV3Access = null;

  /**
   * SNMPv3 authentication protocol. May only be SHA or MD5.  @DEFAULT reverts this field to its default value.
   */
  @JsonAdapter(SnmpV3AuthProtocolEnum.Adapter.class)
  public enum SnmpV3AuthProtocolEnum {
    SHA("SHA"),
    
    MD5("MD5");

    private String value;

    SnmpV3AuthProtocolEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SnmpV3AuthProtocolEnum fromValue(String text) {
      for (SnmpV3AuthProtocolEnum b : SnmpV3AuthProtocolEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SnmpV3AuthProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SnmpV3AuthProtocolEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SnmpV3AuthProtocolEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SnmpV3AuthProtocolEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("snmp_v3_auth_protocol")
  private SnmpV3AuthProtocolEnum snmpV3AuthProtocol = null;

  /**
   * SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.
   */
  @JsonAdapter(SnmpV3PrivProtocolEnum.Adapter.class)
  public enum SnmpV3PrivProtocolEnum {
    AES("AES"),
    
    DES("DES");

    private String value;

    SnmpV3PrivProtocolEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SnmpV3PrivProtocolEnum fromValue(String text) {
      for (SnmpV3PrivProtocolEnum b : SnmpV3PrivProtocolEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SnmpV3PrivProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SnmpV3PrivProtocolEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SnmpV3PrivProtocolEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SnmpV3PrivProtocolEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("snmp_v3_priv_protocol")
  private SnmpV3PrivProtocolEnum snmpV3PrivProtocol = null;

  @SerializedName("snmp_v3_read_only_user")
  private String snmpV3ReadOnlyUser = null;

  /**
   * SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.
   */
  @JsonAdapter(SnmpV3SecurityLevelEnum.Adapter.class)
  public enum SnmpV3SecurityLevelEnum {
    NOAUTHNOPRIV("noAuthNoPriv"),
    
    AUTHNOPRIV("authNoPriv"),
    
    AUTHPRIV("authPriv");

    private String value;

    SnmpV3SecurityLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SnmpV3SecurityLevelEnum fromValue(String text) {
      for (SnmpV3SecurityLevelEnum b : SnmpV3SecurityLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SnmpV3SecurityLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SnmpV3SecurityLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SnmpV3SecurityLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SnmpV3SecurityLevelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("snmp_v3_security_level")
  private SnmpV3SecurityLevelEnum snmpV3SecurityLevel = null;

  @SerializedName("system_contact")
  private String systemContact = null;

  @SerializedName("system_location")
  private String systemLocation = null;

  public SnmpSettingsSettings readOnlyCommunity(String readOnlyCommunity) {
    this.readOnlyCommunity = readOnlyCommunity;
    return this;
  }

   /**
   * The read-only community name.  @DEFAULT reverts this field to its default value.
   * @return readOnlyCommunity
  **/
  @ApiModelProperty(value = "The read-only community name.  @DEFAULT reverts this field to its default value.")
  public String getReadOnlyCommunity() {
    return readOnlyCommunity;
  }

  public void setReadOnlyCommunity(String readOnlyCommunity) {
    this.readOnlyCommunity = readOnlyCommunity;
  }

  public SnmpSettingsSettings service(Boolean service) {
    this.service = service;
    return this;
  }

   /**
   * Whether the SNMP service is enabled.
   * @return service
  **/
  @ApiModelProperty(value = "Whether the SNMP service is enabled.")
  public Boolean isService() {
    return service;
  }

  public void setService(Boolean service) {
    this.service = service;
  }

  public SnmpSettingsSettings snmpV1V2cAccess(Boolean snmpV1V2cAccess) {
    this.snmpV1V2cAccess = snmpV1V2cAccess;
    return this;
  }

   /**
   * Whether SNMP v1 and v2c protocols are enabled.  @DEFAULT reverts this field to its default value.
   * @return snmpV1V2cAccess
  **/
  @ApiModelProperty(value = "Whether SNMP v1 and v2c protocols are enabled.  @DEFAULT reverts this field to its default value.")
  public Boolean isSnmpV1V2cAccess() {
    return snmpV1V2cAccess;
  }

  public void setSnmpV1V2cAccess(Boolean snmpV1V2cAccess) {
    this.snmpV1V2cAccess = snmpV1V2cAccess;
  }

  public SnmpSettingsSettings snmpV3Access(Boolean snmpV3Access) {
    this.snmpV3Access = snmpV3Access;
    return this;
  }

   /**
   * Whether SNMP v3 is enabled.  @DEFAULT reverts this field to its default value.
   * @return snmpV3Access
  **/
  @ApiModelProperty(value = "Whether SNMP v3 is enabled.  @DEFAULT reverts this field to its default value.")
  public Boolean isSnmpV3Access() {
    return snmpV3Access;
  }

  public void setSnmpV3Access(Boolean snmpV3Access) {
    this.snmpV3Access = snmpV3Access;
  }

  public SnmpSettingsSettings snmpV3AuthProtocol(SnmpV3AuthProtocolEnum snmpV3AuthProtocol) {
    this.snmpV3AuthProtocol = snmpV3AuthProtocol;
    return this;
  }

   /**
   * SNMPv3 authentication protocol. May only be SHA or MD5.  @DEFAULT reverts this field to its default value.
   * @return snmpV3AuthProtocol
  **/
  @ApiModelProperty(value = "SNMPv3 authentication protocol. May only be SHA or MD5.  @DEFAULT reverts this field to its default value.")
  public SnmpV3AuthProtocolEnum getSnmpV3AuthProtocol() {
    return snmpV3AuthProtocol;
  }

  public void setSnmpV3AuthProtocol(SnmpV3AuthProtocolEnum snmpV3AuthProtocol) {
    this.snmpV3AuthProtocol = snmpV3AuthProtocol;
  }

  public SnmpSettingsSettings snmpV3PrivProtocol(SnmpV3PrivProtocolEnum snmpV3PrivProtocol) {
    this.snmpV3PrivProtocol = snmpV3PrivProtocol;
    return this;
  }

   /**
   * SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.
   * @return snmpV3PrivProtocol
  **/
  @ApiModelProperty(value = "SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.")
  public SnmpV3PrivProtocolEnum getSnmpV3PrivProtocol() {
    return snmpV3PrivProtocol;
  }

  public void setSnmpV3PrivProtocol(SnmpV3PrivProtocolEnum snmpV3PrivProtocol) {
    this.snmpV3PrivProtocol = snmpV3PrivProtocol;
  }

  public SnmpSettingsSettings snmpV3ReadOnlyUser(String snmpV3ReadOnlyUser) {
    this.snmpV3ReadOnlyUser = snmpV3ReadOnlyUser;
    return this;
  }

   /**
   * The read-only user for SNMP v3 read requests.  @DEFAULT reverts this field to its default value.
   * @return snmpV3ReadOnlyUser
  **/
  @ApiModelProperty(value = "The read-only user for SNMP v3 read requests.  @DEFAULT reverts this field to its default value.")
  public String getSnmpV3ReadOnlyUser() {
    return snmpV3ReadOnlyUser;
  }

  public void setSnmpV3ReadOnlyUser(String snmpV3ReadOnlyUser) {
    this.snmpV3ReadOnlyUser = snmpV3ReadOnlyUser;
  }

  public SnmpSettingsSettings snmpV3SecurityLevel(SnmpV3SecurityLevelEnum snmpV3SecurityLevel) {
    this.snmpV3SecurityLevel = snmpV3SecurityLevel;
    return this;
  }

   /**
   * SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.
   * @return snmpV3SecurityLevel
  **/
  @ApiModelProperty(value = "SNMPv3 privacy protocol. May only be AES or DES. @DEFAULT reverts this field to its default value.")
  public SnmpV3SecurityLevelEnum getSnmpV3SecurityLevel() {
    return snmpV3SecurityLevel;
  }

  public void setSnmpV3SecurityLevel(SnmpV3SecurityLevelEnum snmpV3SecurityLevel) {
    this.snmpV3SecurityLevel = snmpV3SecurityLevel;
  }

  public SnmpSettingsSettings systemContact(String systemContact) {
    this.systemContact = systemContact;
    return this;
  }

   /**
   * Contact information for the system owner.  This must be a valid email address.  @DEFAULT reverts this field to its default value.
   * @return systemContact
  **/
  @ApiModelProperty(value = "Contact information for the system owner.  This must be a valid email address.  @DEFAULT reverts this field to its default value.")
  public String getSystemContact() {
    return systemContact;
  }

  public void setSystemContact(String systemContact) {
    this.systemContact = systemContact;
  }

  public SnmpSettingsSettings systemLocation(String systemLocation) {
    this.systemLocation = systemLocation;
    return this;
  }

   /**
   * A location name for the SNMP system.  @DEFAULT reverts this field to its default value.
   * @return systemLocation
  **/
  @ApiModelProperty(value = "A location name for the SNMP system.  @DEFAULT reverts this field to its default value.")
  public String getSystemLocation() {
    return systemLocation;
  }

  public void setSystemLocation(String systemLocation) {
    this.systemLocation = systemLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnmpSettingsSettings snmpSettingsSettings = (SnmpSettingsSettings) o;
    return Objects.equals(this.readOnlyCommunity, snmpSettingsSettings.readOnlyCommunity) &&
        Objects.equals(this.service, snmpSettingsSettings.service) &&
        Objects.equals(this.snmpV1V2cAccess, snmpSettingsSettings.snmpV1V2cAccess) &&
        Objects.equals(this.snmpV3Access, snmpSettingsSettings.snmpV3Access) &&
        Objects.equals(this.snmpV3AuthProtocol, snmpSettingsSettings.snmpV3AuthProtocol) &&
        Objects.equals(this.snmpV3PrivProtocol, snmpSettingsSettings.snmpV3PrivProtocol) &&
        Objects.equals(this.snmpV3ReadOnlyUser, snmpSettingsSettings.snmpV3ReadOnlyUser) &&
        Objects.equals(this.snmpV3SecurityLevel, snmpSettingsSettings.snmpV3SecurityLevel) &&
        Objects.equals(this.systemContact, snmpSettingsSettings.systemContact) &&
        Objects.equals(this.systemLocation, snmpSettingsSettings.systemLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(readOnlyCommunity, service, snmpV1V2cAccess, snmpV3Access, snmpV3AuthProtocol, snmpV3PrivProtocol, snmpV3ReadOnlyUser, snmpV3SecurityLevel, systemContact, systemLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnmpSettingsSettings {\n");
    
    sb.append("    readOnlyCommunity: ").append(toIndentedString(readOnlyCommunity)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    snmpV1V2cAccess: ").append(toIndentedString(snmpV1V2cAccess)).append("\n");
    sb.append("    snmpV3Access: ").append(toIndentedString(snmpV3Access)).append("\n");
    sb.append("    snmpV3AuthProtocol: ").append(toIndentedString(snmpV3AuthProtocol)).append("\n");
    sb.append("    snmpV3PrivProtocol: ").append(toIndentedString(snmpV3PrivProtocol)).append("\n");
    sb.append("    snmpV3ReadOnlyUser: ").append(toIndentedString(snmpV3ReadOnlyUser)).append("\n");
    sb.append("    snmpV3SecurityLevel: ").append(toIndentedString(snmpV3SecurityLevel)).append("\n");
    sb.append("    systemContact: ").append(toIndentedString(systemContact)).append("\n");
    sb.append("    systemLocation: ").append(toIndentedString(systemLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

