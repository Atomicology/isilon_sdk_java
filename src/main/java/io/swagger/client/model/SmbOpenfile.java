/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SmbOpenfile
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class SmbOpenfile {
  @SerializedName("file")
  private String file = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("locks")
  private Integer locks = null;

  /**
   * Gets or Sets permissions
   */
  @JsonAdapter(PermissionsEnum.Adapter.class)
  public enum PermissionsEnum {
    READ("read"),
    
    WRITE("write"),
    
    CREATE("create");

    private String value;

    PermissionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionsEnum fromValue(String text) {
      for (PermissionsEnum b : PermissionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PermissionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PermissionsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("permissions")
  private List<PermissionsEnum> permissions = new ArrayList<PermissionsEnum>();

  @SerializedName("user")
  private String user = null;

  public SmbOpenfile file(String file) {
    this.file = file;
    return this;
  }

   /**
   * Path of file within /ifs.
   * @return file
  **/
  @ApiModelProperty(required = true, value = "Path of file within /ifs.")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public SmbOpenfile id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The file ID.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The file ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SmbOpenfile locks(Integer locks) {
    this.locks = locks;
    return this;
  }

   /**
   * Number of locks user holds on file.
   * @return locks
  **/
  @ApiModelProperty(required = true, value = "Number of locks user holds on file.")
  public Integer getLocks() {
    return locks;
  }

  public void setLocks(Integer locks) {
    this.locks = locks;
  }

  public SmbOpenfile permissions(List<PermissionsEnum> permissions) {
    this.permissions = permissions;
    return this;
  }

  public SmbOpenfile addPermissionsItem(PermissionsEnum permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * The user&#39;s permissions on file.
   * @return permissions
  **/
  @ApiModelProperty(required = true, value = "The user's permissions on file.")
  public List<PermissionsEnum> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<PermissionsEnum> permissions) {
    this.permissions = permissions;
  }

  public SmbOpenfile user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User holding file open.
   * @return user
  **/
  @ApiModelProperty(required = true, value = "User holding file open.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmbOpenfile smbOpenfile = (SmbOpenfile) o;
    return Objects.equals(this.file, smbOpenfile.file) &&
        Objects.equals(this.id, smbOpenfile.id) &&
        Objects.equals(this.locks, smbOpenfile.locks) &&
        Objects.equals(this.permissions, smbOpenfile.permissions) &&
        Objects.equals(this.user, smbOpenfile.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(file, id, locks, permissions, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmbOpenfile {\n");
    
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locks: ").append(toIndentedString(locks)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

