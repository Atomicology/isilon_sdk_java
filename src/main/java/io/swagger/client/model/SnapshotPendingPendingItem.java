/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SnapshotPendingPendingItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class SnapshotPendingPendingItem {
  @SerializedName("id")
  private String id = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("schedule")
  private String schedule = null;

  @SerializedName("snapshot")
  private String snapshot = null;

  @SerializedName("time")
  private Integer time = null;

  public SnapshotPendingPendingItem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The system supplied unique ID used for sorting and paging.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The system supplied unique ID used for sorting and paging.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SnapshotPendingPendingItem path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The /ifs path that will snapshotted.
   * @return path
  **/
  @ApiModelProperty(required = true, value = "The /ifs path that will snapshotted.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public SnapshotPendingPendingItem schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * The name of the schedule used to create this snapshot.
   * @return schedule
  **/
  @ApiModelProperty(required = true, value = "The name of the schedule used to create this snapshot.")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public SnapshotPendingPendingItem snapshot(String snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * The system snapshot name formed from the schedule formate.
   * @return snapshot
  **/
  @ApiModelProperty(required = true, value = "The system snapshot name formed from the schedule formate.")
  public String getSnapshot() {
    return snapshot;
  }

  public void setSnapshot(String snapshot) {
    this.snapshot = snapshot;
  }

  public SnapshotPendingPendingItem time(Integer time) {
    this.time = time;
    return this;
  }

   /**
   * The Unix Epoch time the snapshot will be created.
   * @return time
  **/
  @ApiModelProperty(required = true, value = "The Unix Epoch time the snapshot will be created.")
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotPendingPendingItem snapshotPendingPendingItem = (SnapshotPendingPendingItem) o;
    return Objects.equals(this.id, snapshotPendingPendingItem.id) &&
        Objects.equals(this.path, snapshotPendingPendingItem.path) &&
        Objects.equals(this.schedule, snapshotPendingPendingItem.schedule) &&
        Objects.equals(this.snapshot, snapshotPendingPendingItem.snapshot) &&
        Objects.equals(this.time, snapshotPendingPendingItem.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, path, schedule, snapshot, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotPendingPendingItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

