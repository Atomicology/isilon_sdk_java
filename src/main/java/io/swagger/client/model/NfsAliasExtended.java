/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NfsAlias;
import java.io.IOException;

/**
 * NfsAliasExtended
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class NfsAliasExtended {
  @SerializedName("health")
  private String health = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("zone")
  private String zone = null;

  @SerializedName("id")
  private String id = null;

  public NfsAliasExtended health(String health) {
    this.health = health;
    return this;
  }

   /**
   * Specifies whether the alias is usable.
   * @return health
  **/
  @ApiModelProperty(value = "Specifies whether the alias is usable.")
  public String getHealth() {
    return health;
  }

  public void setHealth(String health) {
    this.health = health;
  }

  public NfsAliasExtended name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Specifies the name by which the alias can be referenced.
   * @return name
  **/
  @ApiModelProperty(value = "Specifies the name by which the alias can be referenced.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NfsAliasExtended path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Specifies the path to which the alias points.
   * @return path
  **/
  @ApiModelProperty(value = "Specifies the path to which the alias points.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public NfsAliasExtended zone(String zone) {
    this.zone = zone;
    return this;
  }

   /**
   * Specifies the zone in which the alias is valid.
   * @return zone
  **/
  @ApiModelProperty(value = "Specifies the zone in which the alias is valid.")
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }

  public NfsAliasExtended id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Specifies a string which represents the unique location of the alias.
   * @return id
  **/
  @ApiModelProperty(value = "Specifies a string which represents the unique location of the alias.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfsAliasExtended nfsAliasExtended = (NfsAliasExtended) o;
    return Objects.equals(this.health, nfsAliasExtended.health) &&
        Objects.equals(this.name, nfsAliasExtended.name) &&
        Objects.equals(this.path, nfsAliasExtended.path) &&
        Objects.equals(this.zone, nfsAliasExtended.zone) &&
        Objects.equals(this.id, nfsAliasExtended.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(health, name, path, zone, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfsAliasExtended {\n");
    
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

