/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LicenseLicense;
import io.swagger.client.model.LicenseLicenses;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LicenseLicensesExtended
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class LicenseLicensesExtended {
  @SerializedName("licenses")
  private List<LicenseLicense> licenses = null;

  @SerializedName("activation_incomplete_alert")
  private Boolean activationIncompleteAlert = null;

  @SerializedName("base_only_licenses")
  private List<String> baseOnlyLicenses = new ArrayList<String>();

  @SerializedName("evaluatable")
  private List<String> evaluatable = new ArrayList<String>();

  @SerializedName("swid")
  private String swid = null;

  @SerializedName("valid_signature")
  private Boolean validSignature = null;

  public LicenseLicensesExtended licenses(List<LicenseLicense> licenses) {
    this.licenses = licenses;
    return this;
  }

  public LicenseLicensesExtended addLicensesItem(LicenseLicense licensesItem) {
    if (this.licenses == null) {
      this.licenses = new ArrayList<LicenseLicense>();
    }
    this.licenses.add(licensesItem);
    return this;
  }

   /**
   * Get licenses
   * @return licenses
  **/
  @ApiModelProperty(value = "")
  public List<LicenseLicense> getLicenses() {
    return licenses;
  }

  public void setLicenses(List<LicenseLicense> licenses) {
    this.licenses = licenses;
  }

  public LicenseLicensesExtended activationIncompleteAlert(Boolean activationIncompleteAlert) {
    this.activationIncompleteAlert = activationIncompleteAlert;
    return this;
  }

   /**
   * True when we are generating an activation incomplete alert. An activation incomplete alert is generated if we do not have a signed license file 90 days after OneFS is upgraded.
   * @return activationIncompleteAlert
  **/
  @ApiModelProperty(required = true, value = "True when we are generating an activation incomplete alert. An activation incomplete alert is generated if we do not have a signed license file 90 days after OneFS is upgraded.")
  public Boolean isActivationIncompleteAlert() {
    return activationIncompleteAlert;
  }

  public void setActivationIncompleteAlert(Boolean activationIncompleteAlert) {
    this.activationIncompleteAlert = activationIncompleteAlert;
  }

  public LicenseLicensesExtended baseOnlyLicenses(List<String> baseOnlyLicenses) {
    this.baseOnlyLicenses = baseOnlyLicenses;
    return this;
  }

  public LicenseLicensesExtended addBaseOnlyLicensesItem(String baseOnlyLicensesItem) {
    this.baseOnlyLicenses.add(baseOnlyLicensesItem);
    return this;
  }

   /**
   * Get baseOnlyLicenses
   * @return baseOnlyLicenses
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getBaseOnlyLicenses() {
    return baseOnlyLicenses;
  }

  public void setBaseOnlyLicenses(List<String> baseOnlyLicenses) {
    this.baseOnlyLicenses = baseOnlyLicenses;
  }

  public LicenseLicensesExtended evaluatable(List<String> evaluatable) {
    this.evaluatable = evaluatable;
    return this;
  }

  public LicenseLicensesExtended addEvaluatableItem(String evaluatableItem) {
    this.evaluatable.add(evaluatableItem);
    return this;
  }

   /**
   * Get evaluatable
   * @return evaluatable
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getEvaluatable() {
    return evaluatable;
  }

  public void setEvaluatable(List<String> evaluatable) {
    this.evaluatable = evaluatable;
  }

  public LicenseLicensesExtended swid(String swid) {
    this.swid = swid;
    return this;
  }

   /**
   * Software license identifier. SWID will be absent if not yet obtained from a license file.
   * @return swid
  **/
  @ApiModelProperty(value = "Software license identifier. SWID will be absent if not yet obtained from a license file.")
  public String getSwid() {
    return swid;
  }

  public void setSwid(String swid) {
    this.swid = swid;
  }

  public LicenseLicensesExtended validSignature(Boolean validSignature) {
    this.validSignature = validSignature;
    return this;
  }

   /**
   * True if license file contains a valid signature.
   * @return validSignature
  **/
  @ApiModelProperty(required = true, value = "True if license file contains a valid signature.")
  public Boolean isValidSignature() {
    return validSignature;
  }

  public void setValidSignature(Boolean validSignature) {
    this.validSignature = validSignature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseLicensesExtended licenseLicensesExtended = (LicenseLicensesExtended) o;
    return Objects.equals(this.licenses, licenseLicensesExtended.licenses) &&
        Objects.equals(this.activationIncompleteAlert, licenseLicensesExtended.activationIncompleteAlert) &&
        Objects.equals(this.baseOnlyLicenses, licenseLicensesExtended.baseOnlyLicenses) &&
        Objects.equals(this.evaluatable, licenseLicensesExtended.evaluatable) &&
        Objects.equals(this.swid, licenseLicensesExtended.swid) &&
        Objects.equals(this.validSignature, licenseLicensesExtended.validSignature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(licenses, activationIncompleteAlert, baseOnlyLicenses, evaluatable, swid, validSignature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseLicensesExtended {\n");
    
    sb.append("    licenses: ").append(toIndentedString(licenses)).append("\n");
    sb.append("    activationIncompleteAlert: ").append(toIndentedString(activationIncompleteAlert)).append("\n");
    sb.append("    baseOnlyLicenses: ").append(toIndentedString(baseOnlyLicenses)).append("\n");
    sb.append("    evaluatable: ").append(toIndentedString(evaluatable)).append("\n");
    sb.append("    swid: ").append(toIndentedString(swid)).append("\n");
    sb.append("    validSignature: ").append(toIndentedString(validSignature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

