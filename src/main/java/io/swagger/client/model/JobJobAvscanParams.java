/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * JobJobAvscanParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class JobJobAvscanParams {
  @SerializedName("force_run")
  private Boolean forceRun = null;

  @SerializedName("policy")
  private String policy = null;

  @SerializedName("report_id")
  private String reportId = null;

  @SerializedName("update")
  private Boolean update = null;

  public JobJobAvscanParams forceRun(Boolean forceRun) {
    this.forceRun = forceRun;
    return this;
  }

   /**
   * Force files to be scanned, even if excluded by the policy.
   * @return forceRun
  **/
  @ApiModelProperty(value = "Force files to be scanned, even if excluded by the policy.")
  public Boolean isForceRun() {
    return forceRun;
  }

  public void setForceRun(Boolean forceRun) {
    this.forceRun = forceRun;
  }

  public JobJobAvscanParams policy(String policy) {
    this.policy = policy;
    return this;
  }

   /**
   * The antivirus scan policy to run.
   * @return policy
  **/
  @ApiModelProperty(required = true, value = "The antivirus scan policy to run.")
  public String getPolicy() {
    return policy;
  }

  public void setPolicy(String policy) {
    this.policy = policy;
  }

  public JobJobAvscanParams reportId(String reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * An optional report id for the scan.
   * @return reportId
  **/
  @ApiModelProperty(value = "An optional report id for the scan.")
  public String getReportId() {
    return reportId;
  }

  public void setReportId(String reportId) {
    this.reportId = reportId;
  }

  public JobJobAvscanParams update(Boolean update) {
    this.update = update;
    return this;
  }

   /**
   * Update the last run time for the policy.
   * @return update
  **/
  @ApiModelProperty(value = "Update the last run time for the policy.")
  public Boolean isUpdate() {
    return update;
  }

  public void setUpdate(Boolean update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobJobAvscanParams jobJobAvscanParams = (JobJobAvscanParams) o;
    return Objects.equals(this.forceRun, jobJobAvscanParams.forceRun) &&
        Objects.equals(this.policy, jobJobAvscanParams.policy) &&
        Objects.equals(this.reportId, jobJobAvscanParams.reportId) &&
        Objects.equals(this.update, jobJobAvscanParams.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forceRun, policy, reportId, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobJobAvscanParams {\n");
    
    sb.append("    forceRun: ").append(toIndentedString(forceRun)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

