/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeSensorsNodeSensorValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * NodeSensorsNodeSensor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class NodeSensorsNodeSensor {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("values")
  private List<NodeSensorsNodeSensorValue> values = null;

  public NodeSensorsNodeSensor count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * The count of values in this sensor group.
   * @return count
  **/
  @ApiModelProperty(value = "The count of values in this sensor group.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public NodeSensorsNodeSensor name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this sensor group.
   * @return name
  **/
  @ApiModelProperty(value = "The name of this sensor group.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NodeSensorsNodeSensor values(List<NodeSensorsNodeSensorValue> values) {
    this.values = values;
    return this;
  }

  public NodeSensorsNodeSensor addValuesItem(NodeSensorsNodeSensorValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<NodeSensorsNodeSensorValue>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * The list of specific sensor value info in this sensor group.
   * @return values
  **/
  @ApiModelProperty(value = "The list of specific sensor value info in this sensor group.")
  public List<NodeSensorsNodeSensorValue> getValues() {
    return values;
  }

  public void setValues(List<NodeSensorsNodeSensorValue> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeSensorsNodeSensor nodeSensorsNodeSensor = (NodeSensorsNodeSensor) o;
    return Objects.equals(this.count, nodeSensorsNodeSensor.count) &&
        Objects.equals(this.name, nodeSensorsNodeSensor.name) &&
        Objects.equals(this.values, nodeSensorsNodeSensor.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, name, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeSensorsNodeSensor {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

