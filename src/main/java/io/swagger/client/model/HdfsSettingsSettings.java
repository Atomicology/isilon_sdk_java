/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * HdfsSettingsSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class HdfsSettingsSettings {
  @SerializedName("ambari_metrics_collector")
  private String ambariMetricsCollector = null;

  @SerializedName("ambari_namenode")
  private String ambariNamenode = null;

  @SerializedName("ambari_server")
  private String ambariServer = null;

  /**
   * Type of authentication for HDFS protocol.
   */
  @JsonAdapter(AuthenticationModeEnum.Adapter.class)
  public enum AuthenticationModeEnum {
    ALL("all"),
    
    SIMPLE_ONLY("simple_only"),
    
    KERBEROS_ONLY("kerberos_only");

    private String value;

    AuthenticationModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationModeEnum fromValue(String text) {
      for (AuthenticationModeEnum b : AuthenticationModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthenticationModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthenticationModeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authentication_mode")
  private AuthenticationModeEnum authenticationMode = null;

  /**
   * Encryption algorithm to use for data transfer (if any)
   */
  @JsonAdapter(DataTransferCipherEnum.Adapter.class)
  public enum DataTransferCipherEnum {
    NONE("none"),
    
    AES_128_CTR("aes_128_ctr"),
    
    AES_192_CTR("aes_192_ctr"),
    
    AES_256_CTR("aes_256_ctr");

    private String value;

    DataTransferCipherEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataTransferCipherEnum fromValue(String text) {
      for (DataTransferCipherEnum b : DataTransferCipherEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DataTransferCipherEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataTransferCipherEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataTransferCipherEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DataTransferCipherEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("data_transfer_cipher")
  private DataTransferCipherEnum dataTransferCipher = null;

  @SerializedName("default_block_size")
  private Integer defaultBlockSize = null;

  /**
   * Checksum type reported by HDFS server.
   */
  @JsonAdapter(DefaultChecksumTypeEnum.Adapter.class)
  public enum DefaultChecksumTypeEnum {
    NONE("none"),
    
    CRC32("crc32"),
    
    CRC32C("crc32c");

    private String value;

    DefaultChecksumTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultChecksumTypeEnum fromValue(String text) {
      for (DefaultChecksumTypeEnum b : DefaultChecksumTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DefaultChecksumTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultChecksumTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultChecksumTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DefaultChecksumTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("default_checksum_type")
  private DefaultChecksumTypeEnum defaultChecksumType = null;

  @SerializedName("odp_version")
  private String odpVersion = null;

  @SerializedName("root_directory")
  private String rootDirectory = null;

  @SerializedName("service")
  private Boolean service = null;

  @SerializedName("webhdfs_enabled")
  private Boolean webhdfsEnabled = null;

  public HdfsSettingsSettings ambariMetricsCollector(String ambariMetricsCollector) {
    this.ambariMetricsCollector = ambariMetricsCollector;
    return this;
  }

   /**
   * Ambari metrics collector
   * @return ambariMetricsCollector
  **/
  @ApiModelProperty(value = "Ambari metrics collector")
  public String getAmbariMetricsCollector() {
    return ambariMetricsCollector;
  }

  public void setAmbariMetricsCollector(String ambariMetricsCollector) {
    this.ambariMetricsCollector = ambariMetricsCollector;
  }

  public HdfsSettingsSettings ambariNamenode(String ambariNamenode) {
    this.ambariNamenode = ambariNamenode;
    return this;
  }

   /**
   * NameNode of Ambari server
   * @return ambariNamenode
  **/
  @ApiModelProperty(value = "NameNode of Ambari server")
  public String getAmbariNamenode() {
    return ambariNamenode;
  }

  public void setAmbariNamenode(String ambariNamenode) {
    this.ambariNamenode = ambariNamenode;
  }

  public HdfsSettingsSettings ambariServer(String ambariServer) {
    this.ambariServer = ambariServer;
    return this;
  }

   /**
   * Ambari server
   * @return ambariServer
  **/
  @ApiModelProperty(value = "Ambari server")
  public String getAmbariServer() {
    return ambariServer;
  }

  public void setAmbariServer(String ambariServer) {
    this.ambariServer = ambariServer;
  }

  public HdfsSettingsSettings authenticationMode(AuthenticationModeEnum authenticationMode) {
    this.authenticationMode = authenticationMode;
    return this;
  }

   /**
   * Type of authentication for HDFS protocol.
   * @return authenticationMode
  **/
  @ApiModelProperty(value = "Type of authentication for HDFS protocol.")
  public AuthenticationModeEnum getAuthenticationMode() {
    return authenticationMode;
  }

  public void setAuthenticationMode(AuthenticationModeEnum authenticationMode) {
    this.authenticationMode = authenticationMode;
  }

  public HdfsSettingsSettings dataTransferCipher(DataTransferCipherEnum dataTransferCipher) {
    this.dataTransferCipher = dataTransferCipher;
    return this;
  }

   /**
   * Encryption algorithm to use for data transfer (if any)
   * @return dataTransferCipher
  **/
  @ApiModelProperty(value = "Encryption algorithm to use for data transfer (if any)")
  public DataTransferCipherEnum getDataTransferCipher() {
    return dataTransferCipher;
  }

  public void setDataTransferCipher(DataTransferCipherEnum dataTransferCipher) {
    this.dataTransferCipher = dataTransferCipher;
  }

  public HdfsSettingsSettings defaultBlockSize(Integer defaultBlockSize) {
    this.defaultBlockSize = defaultBlockSize;
    return this;
  }

   /**
   * Block size (size&#x3D;2**value) reported by HDFS server.
   * @return defaultBlockSize
  **/
  @ApiModelProperty(value = "Block size (size=2**value) reported by HDFS server.")
  public Integer getDefaultBlockSize() {
    return defaultBlockSize;
  }

  public void setDefaultBlockSize(Integer defaultBlockSize) {
    this.defaultBlockSize = defaultBlockSize;
  }

  public HdfsSettingsSettings defaultChecksumType(DefaultChecksumTypeEnum defaultChecksumType) {
    this.defaultChecksumType = defaultChecksumType;
    return this;
  }

   /**
   * Checksum type reported by HDFS server.
   * @return defaultChecksumType
  **/
  @ApiModelProperty(value = "Checksum type reported by HDFS server.")
  public DefaultChecksumTypeEnum getDefaultChecksumType() {
    return defaultChecksumType;
  }

  public void setDefaultChecksumType(DefaultChecksumTypeEnum defaultChecksumType) {
    this.defaultChecksumType = defaultChecksumType;
  }

  public HdfsSettingsSettings odpVersion(String odpVersion) {
    this.odpVersion = odpVersion;
    return this;
  }

   /**
   * ODP stack repository version number
   * @return odpVersion
  **/
  @ApiModelProperty(value = "ODP stack repository version number")
  public String getOdpVersion() {
    return odpVersion;
  }

  public void setOdpVersion(String odpVersion) {
    this.odpVersion = odpVersion;
  }

  public HdfsSettingsSettings rootDirectory(String rootDirectory) {
    this.rootDirectory = rootDirectory;
    return this;
  }

   /**
   * HDFS root directory
   * @return rootDirectory
  **/
  @ApiModelProperty(value = "HDFS root directory")
  public String getRootDirectory() {
    return rootDirectory;
  }

  public void setRootDirectory(String rootDirectory) {
    this.rootDirectory = rootDirectory;
  }

  public HdfsSettingsSettings service(Boolean service) {
    this.service = service;
    return this;
  }

   /**
   * Enable or disable the HDFS service.
   * @return service
  **/
  @ApiModelProperty(value = "Enable or disable the HDFS service.")
  public Boolean isService() {
    return service;
  }

  public void setService(Boolean service) {
    this.service = service;
  }

  public HdfsSettingsSettings webhdfsEnabled(Boolean webhdfsEnabled) {
    this.webhdfsEnabled = webhdfsEnabled;
    return this;
  }

   /**
   * Enable or disable WebHDFS
   * @return webhdfsEnabled
  **/
  @ApiModelProperty(value = "Enable or disable WebHDFS")
  public Boolean isWebhdfsEnabled() {
    return webhdfsEnabled;
  }

  public void setWebhdfsEnabled(Boolean webhdfsEnabled) {
    this.webhdfsEnabled = webhdfsEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HdfsSettingsSettings hdfsSettingsSettings = (HdfsSettingsSettings) o;
    return Objects.equals(this.ambariMetricsCollector, hdfsSettingsSettings.ambariMetricsCollector) &&
        Objects.equals(this.ambariNamenode, hdfsSettingsSettings.ambariNamenode) &&
        Objects.equals(this.ambariServer, hdfsSettingsSettings.ambariServer) &&
        Objects.equals(this.authenticationMode, hdfsSettingsSettings.authenticationMode) &&
        Objects.equals(this.dataTransferCipher, hdfsSettingsSettings.dataTransferCipher) &&
        Objects.equals(this.defaultBlockSize, hdfsSettingsSettings.defaultBlockSize) &&
        Objects.equals(this.defaultChecksumType, hdfsSettingsSettings.defaultChecksumType) &&
        Objects.equals(this.odpVersion, hdfsSettingsSettings.odpVersion) &&
        Objects.equals(this.rootDirectory, hdfsSettingsSettings.rootDirectory) &&
        Objects.equals(this.service, hdfsSettingsSettings.service) &&
        Objects.equals(this.webhdfsEnabled, hdfsSettingsSettings.webhdfsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ambariMetricsCollector, ambariNamenode, ambariServer, authenticationMode, dataTransferCipher, defaultBlockSize, defaultChecksumType, odpVersion, rootDirectory, service, webhdfsEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HdfsSettingsSettings {\n");
    
    sb.append("    ambariMetricsCollector: ").append(toIndentedString(ambariMetricsCollector)).append("\n");
    sb.append("    ambariNamenode: ").append(toIndentedString(ambariNamenode)).append("\n");
    sb.append("    ambariServer: ").append(toIndentedString(ambariServer)).append("\n");
    sb.append("    authenticationMode: ").append(toIndentedString(authenticationMode)).append("\n");
    sb.append("    dataTransferCipher: ").append(toIndentedString(dataTransferCipher)).append("\n");
    sb.append("    defaultBlockSize: ").append(toIndentedString(defaultBlockSize)).append("\n");
    sb.append("    defaultChecksumType: ").append(toIndentedString(defaultChecksumType)).append("\n");
    sb.append("    odpVersion: ").append(toIndentedString(odpVersion)).append("\n");
    sb.append("    rootDirectory: ").append(toIndentedString(rootDirectory)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    webhdfsEnabled: ").append(toIndentedString(webhdfsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

