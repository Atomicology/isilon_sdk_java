/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AuditSettingsSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class AuditSettingsSettings {
  /**
   * Gets or Sets auditFailure
   */
  @JsonAdapter(AuditFailureEnum.Adapter.class)
  public enum AuditFailureEnum {
    CLOSE("close"),
    
    CREATE("create"),
    
    DELETE("delete"),
    
    GET_SECURITY("get_security"),
    
    LOGOFF("logoff"),
    
    LOGON("logon"),
    
    READ("read"),
    
    RENAME("rename"),
    
    SET_SECURITY("set_security"),
    
    TREE_CONNECT("tree_connect"),
    
    WRITE("write");

    private String value;

    AuditFailureEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuditFailureEnum fromValue(String text) {
      for (AuditFailureEnum b : AuditFailureEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuditFailureEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuditFailureEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuditFailureEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuditFailureEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("audit_failure")
  private List<AuditFailureEnum> auditFailure = null;

  /**
   * Gets or Sets auditSuccess
   */
  @JsonAdapter(AuditSuccessEnum.Adapter.class)
  public enum AuditSuccessEnum {
    CLOSE("close"),
    
    CREATE("create"),
    
    DELETE("delete"),
    
    GET_SECURITY("get_security"),
    
    LOGOFF("logoff"),
    
    LOGON("logon"),
    
    READ("read"),
    
    RENAME("rename"),
    
    SET_SECURITY("set_security"),
    
    TREE_CONNECT("tree_connect"),
    
    WRITE("write");

    private String value;

    AuditSuccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuditSuccessEnum fromValue(String text) {
      for (AuditSuccessEnum b : AuditSuccessEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuditSuccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuditSuccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuditSuccessEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuditSuccessEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("audit_success")
  private List<AuditSuccessEnum> auditSuccess = null;

  /**
   * Gets or Sets syslogAuditEvents
   */
  @JsonAdapter(SyslogAuditEventsEnum.Adapter.class)
  public enum SyslogAuditEventsEnum {
    CLOSE("close"),
    
    CREATE("create"),
    
    DELETE("delete"),
    
    GET_SECURITY("get_security"),
    
    LOGOFF("logoff"),
    
    LOGON("logon"),
    
    READ("read"),
    
    RENAME("rename"),
    
    SET_SECURITY("set_security"),
    
    TREE_CONNECT("tree_connect"),
    
    WRITE("write");

    private String value;

    SyslogAuditEventsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SyslogAuditEventsEnum fromValue(String text) {
      for (SyslogAuditEventsEnum b : SyslogAuditEventsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SyslogAuditEventsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SyslogAuditEventsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SyslogAuditEventsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SyslogAuditEventsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("syslog_audit_events")
  private List<SyslogAuditEventsEnum> syslogAuditEvents = null;

  @SerializedName("syslog_forwarding_enabled")
  private Boolean syslogForwardingEnabled = null;

  public AuditSettingsSettings auditFailure(List<AuditFailureEnum> auditFailure) {
    this.auditFailure = auditFailure;
    return this;
  }

  public AuditSettingsSettings addAuditFailureItem(AuditFailureEnum auditFailureItem) {
    if (this.auditFailure == null) {
      this.auditFailure = new ArrayList<AuditFailureEnum>();
    }
    this.auditFailure.add(auditFailureItem);
    return this;
  }

   /**
   * Filter of protocol operations to Audit when they fail.
   * @return auditFailure
  **/
  @ApiModelProperty(value = "Filter of protocol operations to Audit when they fail.")
  public List<AuditFailureEnum> getAuditFailure() {
    return auditFailure;
  }

  public void setAuditFailure(List<AuditFailureEnum> auditFailure) {
    this.auditFailure = auditFailure;
  }

  public AuditSettingsSettings auditSuccess(List<AuditSuccessEnum> auditSuccess) {
    this.auditSuccess = auditSuccess;
    return this;
  }

  public AuditSettingsSettings addAuditSuccessItem(AuditSuccessEnum auditSuccessItem) {
    if (this.auditSuccess == null) {
      this.auditSuccess = new ArrayList<AuditSuccessEnum>();
    }
    this.auditSuccess.add(auditSuccessItem);
    return this;
  }

   /**
   * Filter of protocol operations to Audit when they succeed.
   * @return auditSuccess
  **/
  @ApiModelProperty(value = "Filter of protocol operations to Audit when they succeed.")
  public List<AuditSuccessEnum> getAuditSuccess() {
    return auditSuccess;
  }

  public void setAuditSuccess(List<AuditSuccessEnum> auditSuccess) {
    this.auditSuccess = auditSuccess;
  }

  public AuditSettingsSettings syslogAuditEvents(List<SyslogAuditEventsEnum> syslogAuditEvents) {
    this.syslogAuditEvents = syslogAuditEvents;
    return this;
  }

  public AuditSettingsSettings addSyslogAuditEventsItem(SyslogAuditEventsEnum syslogAuditEventsItem) {
    if (this.syslogAuditEvents == null) {
      this.syslogAuditEvents = new ArrayList<SyslogAuditEventsEnum>();
    }
    this.syslogAuditEvents.add(syslogAuditEventsItem);
    return this;
  }

   /**
   * Filter of Audit operations to forward to syslog.
   * @return syslogAuditEvents
  **/
  @ApiModelProperty(value = "Filter of Audit operations to forward to syslog.")
  public List<SyslogAuditEventsEnum> getSyslogAuditEvents() {
    return syslogAuditEvents;
  }

  public void setSyslogAuditEvents(List<SyslogAuditEventsEnum> syslogAuditEvents) {
    this.syslogAuditEvents = syslogAuditEvents;
  }

  public AuditSettingsSettings syslogForwardingEnabled(Boolean syslogForwardingEnabled) {
    this.syslogForwardingEnabled = syslogForwardingEnabled;
    return this;
  }

   /**
   * Enables forwarding of events to syslog.
   * @return syslogForwardingEnabled
  **/
  @ApiModelProperty(value = "Enables forwarding of events to syslog.")
  public Boolean isSyslogForwardingEnabled() {
    return syslogForwardingEnabled;
  }

  public void setSyslogForwardingEnabled(Boolean syslogForwardingEnabled) {
    this.syslogForwardingEnabled = syslogForwardingEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditSettingsSettings auditSettingsSettings = (AuditSettingsSettings) o;
    return Objects.equals(this.auditFailure, auditSettingsSettings.auditFailure) &&
        Objects.equals(this.auditSuccess, auditSettingsSettings.auditSuccess) &&
        Objects.equals(this.syslogAuditEvents, auditSettingsSettings.syslogAuditEvents) &&
        Objects.equals(this.syslogForwardingEnabled, auditSettingsSettings.syslogForwardingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auditFailure, auditSuccess, syslogAuditEvents, syslogForwardingEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditSettingsSettings {\n");
    
    sb.append("    auditFailure: ").append(toIndentedString(auditFailure)).append("\n");
    sb.append("    auditSuccess: ").append(toIndentedString(auditSuccess)).append("\n");
    sb.append("    syslogAuditEvents: ").append(toIndentedString(syslogAuditEvents)).append("\n");
    sb.append("    syslogForwardingEnabled: ").append(toIndentedString(syslogForwardingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

