/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NfsNetgroupSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T15:41:52.549-07:00")
public class NfsNetgroupSettings {
  @SerializedName("bgwrite")
  private Integer bgwrite = null;

  @SerializedName("expiration")
  private Integer expiration = null;

  @SerializedName("lifetime")
  private Integer lifetime = null;

  @SerializedName("retry")
  private Integer retry = null;

  public NfsNetgroupSettings bgwrite(Integer bgwrite) {
    this.bgwrite = bgwrite;
    return this;
  }

   /**
   * To-disk backup interval for the netgroup cache.
   * @return bgwrite
  **/
  @ApiModelProperty(value = "To-disk backup interval for the netgroup cache.")
  public Integer getBgwrite() {
    return bgwrite;
  }

  public void setBgwrite(Integer bgwrite) {
    this.bgwrite = bgwrite;
  }

  public NfsNetgroupSettings expiration(Integer expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Time between updates of netgroups in the cache.
   * @return expiration
  **/
  @ApiModelProperty(value = "Time between updates of netgroups in the cache.")
  public Integer getExpiration() {
    return expiration;
  }

  public void setExpiration(Integer expiration) {
    this.expiration = expiration;
  }

  public NfsNetgroupSettings lifetime(Integer lifetime) {
    this.lifetime = lifetime;
    return this;
  }

   /**
   * Length of time an un-accessed netgroup remains in the cache.
   * @return lifetime
  **/
  @ApiModelProperty(value = "Length of time an un-accessed netgroup remains in the cache.")
  public Integer getLifetime() {
    return lifetime;
  }

  public void setLifetime(Integer lifetime) {
    this.lifetime = lifetime;
  }

  public NfsNetgroupSettings retry(Integer retry) {
    this.retry = retry;
    return this;
  }

   /**
   * Retry interval for netgroup updates if the remote provider is unresponsive.
   * @return retry
  **/
  @ApiModelProperty(value = "Retry interval for netgroup updates if the remote provider is unresponsive.")
  public Integer getRetry() {
    return retry;
  }

  public void setRetry(Integer retry) {
    this.retry = retry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfsNetgroupSettings nfsNetgroupSettings = (NfsNetgroupSettings) o;
    return Objects.equals(this.bgwrite, nfsNetgroupSettings.bgwrite) &&
        Objects.equals(this.expiration, nfsNetgroupSettings.expiration) &&
        Objects.equals(this.lifetime, nfsNetgroupSettings.lifetime) &&
        Objects.equals(this.retry, nfsNetgroupSettings.retry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bgwrite, expiration, lifetime, retry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfsNetgroupSettings {\n");
    
    sb.append("    bgwrite: ").append(toIndentedString(bgwrite)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    lifetime: ").append(toIndentedString(lifetime)).append("\n");
    sb.append("    retry: ").append(toIndentedString(retry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

