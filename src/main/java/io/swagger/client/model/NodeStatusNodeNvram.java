/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NodeStatusNodeNvramBattery;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * NodeStatusNodeNvram
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class NodeStatusNodeNvram {
  @SerializedName("batteries")
  private List<NodeStatusNodeNvramBattery> batteries = null;

  @SerializedName("battery_count")
  private Integer batteryCount = null;

  @SerializedName("charge_status")
  private String chargeStatus = null;

  @SerializedName("charge_status_number")
  private Integer chargeStatusNumber = null;

  @SerializedName("device")
  private String device = null;

  @SerializedName("present")
  private Boolean present = null;

  @SerializedName("present_flash")
  private Boolean presentFlash = null;

  @SerializedName("present_size")
  private Integer presentSize = null;

  @SerializedName("present_type")
  private String presentType = null;

  @SerializedName("ship_mode")
  private Integer shipMode = null;

  @SerializedName("supported")
  private Boolean supported = null;

  @SerializedName("supported_flash")
  private Boolean supportedFlash = null;

  @SerializedName("supported_size")
  private Integer supportedSize = null;

  @SerializedName("supported_type")
  private String supportedType = null;

  public NodeStatusNodeNvram batteries(List<NodeStatusNodeNvramBattery> batteries) {
    this.batteries = batteries;
    return this;
  }

  public NodeStatusNodeNvram addBatteriesItem(NodeStatusNodeNvramBattery batteriesItem) {
    if (this.batteries == null) {
      this.batteries = new ArrayList<NodeStatusNodeNvramBattery>();
    }
    this.batteries.add(batteriesItem);
    return this;
  }

   /**
   * This node&#39;s NVRAM battery status information.
   * @return batteries
  **/
  @ApiModelProperty(value = "This node's NVRAM battery status information.")
  public List<NodeStatusNodeNvramBattery> getBatteries() {
    return batteries;
  }

  public void setBatteries(List<NodeStatusNodeNvramBattery> batteries) {
    this.batteries = batteries;
  }

  public NodeStatusNodeNvram batteryCount(Integer batteryCount) {
    this.batteryCount = batteryCount;
    return this;
  }

   /**
   * This node&#39;s NVRAM battery count.
   * @return batteryCount
  **/
  @ApiModelProperty(value = "This node's NVRAM battery count.")
  public Integer getBatteryCount() {
    return batteryCount;
  }

  public void setBatteryCount(Integer batteryCount) {
    this.batteryCount = batteryCount;
  }

  public NodeStatusNodeNvram chargeStatus(String chargeStatus) {
    this.chargeStatus = chargeStatus;
    return this;
  }

   /**
   * This node&#39;s NVRAM battery charge status, as a color.
   * @return chargeStatus
  **/
  @ApiModelProperty(value = "This node's NVRAM battery charge status, as a color.")
  public String getChargeStatus() {
    return chargeStatus;
  }

  public void setChargeStatus(String chargeStatus) {
    this.chargeStatus = chargeStatus;
  }

  public NodeStatusNodeNvram chargeStatusNumber(Integer chargeStatusNumber) {
    this.chargeStatusNumber = chargeStatusNumber;
    return this;
  }

   /**
   * This node&#39;s NVRAM battery charge status, as a number.
   * @return chargeStatusNumber
  **/
  @ApiModelProperty(value = "This node's NVRAM battery charge status, as a number.")
  public Integer getChargeStatusNumber() {
    return chargeStatusNumber;
  }

  public void setChargeStatusNumber(Integer chargeStatusNumber) {
    this.chargeStatusNumber = chargeStatusNumber;
  }

  public NodeStatusNodeNvram device(String device) {
    this.device = device;
    return this;
  }

   /**
   * This node&#39;s NVRAM device name with path.
   * @return device
  **/
  @ApiModelProperty(value = "This node's NVRAM device name with path.")
  public String getDevice() {
    return device;
  }

  public void setDevice(String device) {
    this.device = device;
  }

  public NodeStatusNodeNvram present(Boolean present) {
    this.present = present;
    return this;
  }

   /**
   * This node has NVRAM.
   * @return present
  **/
  @ApiModelProperty(value = "This node has NVRAM.")
  public Boolean isPresent() {
    return present;
  }

  public void setPresent(Boolean present) {
    this.present = present;
  }

  public NodeStatusNodeNvram presentFlash(Boolean presentFlash) {
    this.presentFlash = presentFlash;
    return this;
  }

   /**
   * This node has NVRAM with flash storage.
   * @return presentFlash
  **/
  @ApiModelProperty(value = "This node has NVRAM with flash storage.")
  public Boolean isPresentFlash() {
    return presentFlash;
  }

  public void setPresentFlash(Boolean presentFlash) {
    this.presentFlash = presentFlash;
  }

  public NodeStatusNodeNvram presentSize(Integer presentSize) {
    this.presentSize = presentSize;
    return this;
  }

   /**
   * The size of the NVRAM, in bytes.
   * @return presentSize
  **/
  @ApiModelProperty(value = "The size of the NVRAM, in bytes.")
  public Integer getPresentSize() {
    return presentSize;
  }

  public void setPresentSize(Integer presentSize) {
    this.presentSize = presentSize;
  }

  public NodeStatusNodeNvram presentType(String presentType) {
    this.presentType = presentType;
    return this;
  }

   /**
   * This node&#39;s NVRAM type.
   * @return presentType
  **/
  @ApiModelProperty(value = "This node's NVRAM type.")
  public String getPresentType() {
    return presentType;
  }

  public void setPresentType(String presentType) {
    this.presentType = presentType;
  }

  public NodeStatusNodeNvram shipMode(Integer shipMode) {
    this.shipMode = shipMode;
    return this;
  }

   /**
   * This node&#39;s current ship mode state for NVRAM batteries.
   * @return shipMode
  **/
  @ApiModelProperty(value = "This node's current ship mode state for NVRAM batteries.")
  public Integer getShipMode() {
    return shipMode;
  }

  public void setShipMode(Integer shipMode) {
    this.shipMode = shipMode;
  }

  public NodeStatusNodeNvram supported(Boolean supported) {
    this.supported = supported;
    return this;
  }

   /**
   * This node supports NVRAM.
   * @return supported
  **/
  @ApiModelProperty(value = "This node supports NVRAM.")
  public Boolean isSupported() {
    return supported;
  }

  public void setSupported(Boolean supported) {
    this.supported = supported;
  }

  public NodeStatusNodeNvram supportedFlash(Boolean supportedFlash) {
    this.supportedFlash = supportedFlash;
    return this;
  }

   /**
   * This node supports NVRAM with flash storage.
   * @return supportedFlash
  **/
  @ApiModelProperty(value = "This node supports NVRAM with flash storage.")
  public Boolean isSupportedFlash() {
    return supportedFlash;
  }

  public void setSupportedFlash(Boolean supportedFlash) {
    this.supportedFlash = supportedFlash;
  }

  public NodeStatusNodeNvram supportedSize(Integer supportedSize) {
    this.supportedSize = supportedSize;
    return this;
  }

   /**
   * The maximum size of the NVRAM, in bytes.
   * @return supportedSize
  **/
  @ApiModelProperty(value = "The maximum size of the NVRAM, in bytes.")
  public Integer getSupportedSize() {
    return supportedSize;
  }

  public void setSupportedSize(Integer supportedSize) {
    this.supportedSize = supportedSize;
  }

  public NodeStatusNodeNvram supportedType(String supportedType) {
    this.supportedType = supportedType;
    return this;
  }

   /**
   * This node&#39;s supported NVRAM type.
   * @return supportedType
  **/
  @ApiModelProperty(value = "This node's supported NVRAM type.")
  public String getSupportedType() {
    return supportedType;
  }

  public void setSupportedType(String supportedType) {
    this.supportedType = supportedType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeStatusNodeNvram nodeStatusNodeNvram = (NodeStatusNodeNvram) o;
    return Objects.equals(this.batteries, nodeStatusNodeNvram.batteries) &&
        Objects.equals(this.batteryCount, nodeStatusNodeNvram.batteryCount) &&
        Objects.equals(this.chargeStatus, nodeStatusNodeNvram.chargeStatus) &&
        Objects.equals(this.chargeStatusNumber, nodeStatusNodeNvram.chargeStatusNumber) &&
        Objects.equals(this.device, nodeStatusNodeNvram.device) &&
        Objects.equals(this.present, nodeStatusNodeNvram.present) &&
        Objects.equals(this.presentFlash, nodeStatusNodeNvram.presentFlash) &&
        Objects.equals(this.presentSize, nodeStatusNodeNvram.presentSize) &&
        Objects.equals(this.presentType, nodeStatusNodeNvram.presentType) &&
        Objects.equals(this.shipMode, nodeStatusNodeNvram.shipMode) &&
        Objects.equals(this.supported, nodeStatusNodeNvram.supported) &&
        Objects.equals(this.supportedFlash, nodeStatusNodeNvram.supportedFlash) &&
        Objects.equals(this.supportedSize, nodeStatusNodeNvram.supportedSize) &&
        Objects.equals(this.supportedType, nodeStatusNodeNvram.supportedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batteries, batteryCount, chargeStatus, chargeStatusNumber, device, present, presentFlash, presentSize, presentType, shipMode, supported, supportedFlash, supportedSize, supportedType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeStatusNodeNvram {\n");
    
    sb.append("    batteries: ").append(toIndentedString(batteries)).append("\n");
    sb.append("    batteryCount: ").append(toIndentedString(batteryCount)).append("\n");
    sb.append("    chargeStatus: ").append(toIndentedString(chargeStatus)).append("\n");
    sb.append("    chargeStatusNumber: ").append(toIndentedString(chargeStatusNumber)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    present: ").append(toIndentedString(present)).append("\n");
    sb.append("    presentFlash: ").append(toIndentedString(presentFlash)).append("\n");
    sb.append("    presentSize: ").append(toIndentedString(presentSize)).append("\n");
    sb.append("    presentType: ").append(toIndentedString(presentType)).append("\n");
    sb.append("    shipMode: ").append(toIndentedString(shipMode)).append("\n");
    sb.append("    supported: ").append(toIndentedString(supported)).append("\n");
    sb.append("    supportedFlash: ").append(toIndentedString(supportedFlash)).append("\n");
    sb.append("    supportedSize: ").append(toIndentedString(supportedSize)).append("\n");
    sb.append("    supportedType: ").append(toIndentedString(supportedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

