/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CloudJobJobEngineJob
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class CloudJobJobEngineJob {
  @SerializedName("id")
  private Integer id = null;

  /**
   * The state of the related job engine job
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    NULL("null"),
    
    RUNNING("running"),
    
    USER_PAUSED("user-paused"),
    
    SYSTEM_PAUSED("system-paused"),
    
    POLICY_PAUSED("policy-paused"),
    
    WAITING("waiting"),
    
    USER_CANCELED("user-canceled"),
    
    SYSTEM_CANCELED("system-canceled"),
    
    FAILED("failed"),
    
    SUCCEEDED("succeeded");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = StateEnum.NULL;

  public CloudJobJobEngineJob id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the related job engine job
   * @return id
  **/
  @ApiModelProperty(value = "ID of the related job engine job")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CloudJobJobEngineJob state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * The state of the related job engine job
   * @return state
  **/
  @ApiModelProperty(value = "The state of the related job engine job")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudJobJobEngineJob cloudJobJobEngineJob = (CloudJobJobEngineJob) o;
    return Objects.equals(this.id, cloudJobJobEngineJob.id) &&
        Objects.equals(this.state, cloudJobJobEngineJob.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudJobJobEngineJob {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

