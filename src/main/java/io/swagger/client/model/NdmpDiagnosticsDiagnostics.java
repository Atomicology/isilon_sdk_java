/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NdmpDiagnosticsDiagnostics
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class NdmpDiagnosticsDiagnostics {
  @SerializedName("diag_level")
  private Integer diagLevel = null;

  @SerializedName("protocol_version")
  private Integer protocolVersion = null;

  /**
   * Trace level for ndmp.
   */
  @JsonAdapter(TraceLevelEnum.Adapter.class)
  public enum TraceLevelEnum {
    NONE("none"),
    
    STANDARD("standard"),
    
    INCLUDE_FILE_HISTORY("include-file-history"),
    
    LOG_FILE_HISTORY("log-file-history");

    private String value;

    TraceLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TraceLevelEnum fromValue(String text) {
      for (TraceLevelEnum b : TraceLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TraceLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TraceLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TraceLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TraceLevelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("trace_level")
  private TraceLevelEnum traceLevel = null;

  public NdmpDiagnosticsDiagnostics diagLevel(Integer diagLevel) {
    this.diagLevel = diagLevel;
    return this;
  }

   /**
   * Diagnostics level for ndmp.
   * @return diagLevel
  **/
  @ApiModelProperty(value = "Diagnostics level for ndmp.")
  public Integer getDiagLevel() {
    return diagLevel;
  }

  public void setDiagLevel(Integer diagLevel) {
    this.diagLevel = diagLevel;
  }

  public NdmpDiagnosticsDiagnostics protocolVersion(Integer protocolVersion) {
    this.protocolVersion = protocolVersion;
    return this;
  }

   /**
   * The version of the ndmp protocol.
   * @return protocolVersion
  **/
  @ApiModelProperty(value = "The version of the ndmp protocol.")
  public Integer getProtocolVersion() {
    return protocolVersion;
  }

  public void setProtocolVersion(Integer protocolVersion) {
    this.protocolVersion = protocolVersion;
  }

  public NdmpDiagnosticsDiagnostics traceLevel(TraceLevelEnum traceLevel) {
    this.traceLevel = traceLevel;
    return this;
  }

   /**
   * Trace level for ndmp.
   * @return traceLevel
  **/
  @ApiModelProperty(value = "Trace level for ndmp.")
  public TraceLevelEnum getTraceLevel() {
    return traceLevel;
  }

  public void setTraceLevel(TraceLevelEnum traceLevel) {
    this.traceLevel = traceLevel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NdmpDiagnosticsDiagnostics ndmpDiagnosticsDiagnostics = (NdmpDiagnosticsDiagnostics) o;
    return Objects.equals(this.diagLevel, ndmpDiagnosticsDiagnostics.diagLevel) &&
        Objects.equals(this.protocolVersion, ndmpDiagnosticsDiagnostics.protocolVersion) &&
        Objects.equals(this.traceLevel, ndmpDiagnosticsDiagnostics.traceLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagLevel, protocolVersion, traceLevel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NdmpDiagnosticsDiagnostics {\n");
    
    sb.append("    diagLevel: ").append(toIndentedString(diagLevel)).append("\n");
    sb.append("    protocolVersion: ").append(toIndentedString(protocolVersion)).append("\n");
    sb.append("    traceLevel: ").append(toIndentedString(traceLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

