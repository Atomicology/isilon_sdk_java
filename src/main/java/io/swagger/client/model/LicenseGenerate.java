/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LicenseGenerateHardwareItem;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LicenseGenerate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T09:38:03.973-07:00")
public class LicenseGenerate {
  @SerializedName("activated_license_list")
  private List<String> activatedLicenseList = null;

  @SerializedName("activation")
  private String activation = null;

  @SerializedName("hardware")
  private List<LicenseGenerateHardwareItem> hardware = null;

  @SerializedName("not_activated_license_list")
  private List<String> notActivatedLicenseList = null;

  public LicenseGenerate activatedLicenseList(List<String> activatedLicenseList) {
    this.activatedLicenseList = activatedLicenseList;
    return this;
  }

  public LicenseGenerate addActivatedLicenseListItem(String activatedLicenseListItem) {
    if (this.activatedLicenseList == null) {
      this.activatedLicenseList = new ArrayList<String>();
    }
    this.activatedLicenseList.add(activatedLicenseListItem);
    return this;
  }

   /**
   * Array of licenses included in activation file.
   * @return activatedLicenseList
  **/
  @ApiModelProperty(value = "Array of licenses included in activation file.")
  public List<String> getActivatedLicenseList() {
    return activatedLicenseList;
  }

  public void setActivatedLicenseList(List<String> activatedLicenseList) {
    this.activatedLicenseList = activatedLicenseList;
  }

  public LicenseGenerate activation(String activation) {
    this.activation = activation;
    return this;
  }

   /**
   * Contents of licensing activation file.
   * @return activation
  **/
  @ApiModelProperty(value = "Contents of licensing activation file.")
  public String getActivation() {
    return activation;
  }

  public void setActivation(String activation) {
    this.activation = activation;
  }

  public LicenseGenerate hardware(List<LicenseGenerateHardwareItem> hardware) {
    this.hardware = hardware;
    return this;
  }

  public LicenseGenerate addHardwareItem(LicenseGenerateHardwareItem hardwareItem) {
    if (this.hardware == null) {
      this.hardware = new ArrayList<LicenseGenerateHardwareItem>();
    }
    this.hardware.add(hardwareItem);
    return this;
  }

   /**
   * Array of licenses included in activation file.
   * @return hardware
  **/
  @ApiModelProperty(value = "Array of licenses included in activation file.")
  public List<LicenseGenerateHardwareItem> getHardware() {
    return hardware;
  }

  public void setHardware(List<LicenseGenerateHardwareItem> hardware) {
    this.hardware = hardware;
  }

  public LicenseGenerate notActivatedLicenseList(List<String> notActivatedLicenseList) {
    this.notActivatedLicenseList = notActivatedLicenseList;
    return this;
  }

  public LicenseGenerate addNotActivatedLicenseListItem(String notActivatedLicenseListItem) {
    if (this.notActivatedLicenseList == null) {
      this.notActivatedLicenseList = new ArrayList<String>();
    }
    this.notActivatedLicenseList.add(notActivatedLicenseListItem);
    return this;
  }

   /**
   * An array of licenses not included in activation file.
   * @return notActivatedLicenseList
  **/
  @ApiModelProperty(value = "An array of licenses not included in activation file.")
  public List<String> getNotActivatedLicenseList() {
    return notActivatedLicenseList;
  }

  public void setNotActivatedLicenseList(List<String> notActivatedLicenseList) {
    this.notActivatedLicenseList = notActivatedLicenseList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseGenerate licenseGenerate = (LicenseGenerate) o;
    return Objects.equals(this.activatedLicenseList, licenseGenerate.activatedLicenseList) &&
        Objects.equals(this.activation, licenseGenerate.activation) &&
        Objects.equals(this.hardware, licenseGenerate.hardware) &&
        Objects.equals(this.notActivatedLicenseList, licenseGenerate.notActivatedLicenseList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activatedLicenseList, activation, hardware, notActivatedLicenseList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseGenerate {\n");
    
    sb.append("    activatedLicenseList: ").append(toIndentedString(activatedLicenseList)).append("\n");
    sb.append("    activation: ").append(toIndentedString(activation)).append("\n");
    sb.append("    hardware: ").append(toIndentedString(hardware)).append("\n");
    sb.append("    notActivatedLicenseList: ").append(toIndentedString(notActivatedLicenseList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

