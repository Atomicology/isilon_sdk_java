/*
 * Isilon SDK
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EventChannelExtended;
import io.swagger.client.model.EventChannelParameters;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EventChannelCreateParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-18T15:45:33.897-07:00")
public class EventChannelCreateParams {
  @SerializedName("allowed_nodes")
  private List<Integer> allowedNodes = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("excluded_nodes")
  private List<Integer> excludedNodes = null;

  @SerializedName("parameters")
  private EventChannelParameters parameters = null;

  @SerializedName("system")
  private Boolean system = null;

  /**
   * The mechanism used by the channel
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CONNECTEMC("connectemc"),
    
    SMTP("smtp"),
    
    SNMP("snmp"),
    
    HEARTBEAT("heartbeat");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  public EventChannelCreateParams allowedNodes(List<Integer> allowedNodes) {
    this.allowedNodes = allowedNodes;
    return this;
  }

  public EventChannelCreateParams addAllowedNodesItem(Integer allowedNodesItem) {
    if (this.allowedNodes == null) {
      this.allowedNodes = new ArrayList<Integer>();
    }
    this.allowedNodes.add(allowedNodesItem);
    return this;
  }

   /**
   * Nodes (LNNs) that can be masters for this channel
   * @return allowedNodes
  **/
  @ApiModelProperty(value = "Nodes (LNNs) that can be masters for this channel")
  public List<Integer> getAllowedNodes() {
    return allowedNodes;
  }

  public void setAllowedNodes(List<Integer> allowedNodes) {
    this.allowedNodes = allowedNodes;
  }

  public EventChannelCreateParams enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Channel is to be used or not
   * @return enabled
  **/
  @ApiModelProperty(value = "Channel is to be used or not")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public EventChannelCreateParams excludedNodes(List<Integer> excludedNodes) {
    this.excludedNodes = excludedNodes;
    return this;
  }

  public EventChannelCreateParams addExcludedNodesItem(Integer excludedNodesItem) {
    if (this.excludedNodes == null) {
      this.excludedNodes = new ArrayList<Integer>();
    }
    this.excludedNodes.add(excludedNodesItem);
    return this;
  }

   /**
   * Nodes (LNNs) that can NOT be the masters for this channel
   * @return excludedNodes
  **/
  @ApiModelProperty(value = "Nodes (LNNs) that can NOT be the masters for this channel")
  public List<Integer> getExcludedNodes() {
    return excludedNodes;
  }

  public void setExcludedNodes(List<Integer> excludedNodes) {
    this.excludedNodes = excludedNodes;
  }

  public EventChannelCreateParams parameters(EventChannelParameters parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * Parameters to be used for an smtp channel
   * @return parameters
  **/
  @ApiModelProperty(value = "Parameters to be used for an smtp channel")
  public EventChannelParameters getParameters() {
    return parameters;
  }

  public void setParameters(EventChannelParameters parameters) {
    this.parameters = parameters;
  }

  public EventChannelCreateParams system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Channel is a pre-defined system channel
   * @return system
  **/
  @ApiModelProperty(value = "Channel is a pre-defined system channel")
  public Boolean isSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }

  public EventChannelCreateParams type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The mechanism used by the channel
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The mechanism used by the channel")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public EventChannelCreateParams id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier.
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public EventChannelCreateParams name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Channel name,  may not contain /, max length 254.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Channel name,  may not contain /, max length 254.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventChannelCreateParams eventChannelCreateParams = (EventChannelCreateParams) o;
    return Objects.equals(this.allowedNodes, eventChannelCreateParams.allowedNodes) &&
        Objects.equals(this.enabled, eventChannelCreateParams.enabled) &&
        Objects.equals(this.excludedNodes, eventChannelCreateParams.excludedNodes) &&
        Objects.equals(this.parameters, eventChannelCreateParams.parameters) &&
        Objects.equals(this.system, eventChannelCreateParams.system) &&
        Objects.equals(this.type, eventChannelCreateParams.type) &&
        Objects.equals(this.id, eventChannelCreateParams.id) &&
        Objects.equals(this.name, eventChannelCreateParams.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedNodes, enabled, excludedNodes, parameters, system, type, id, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventChannelCreateParams {\n");
    
    sb.append("    allowedNodes: ").append(toIndentedString(allowedNodes)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    excludedNodes: ").append(toIndentedString(excludedNodes)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

